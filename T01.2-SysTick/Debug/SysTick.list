
SysTick.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d4  08000000  08000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001490  080001e0  080001e0  000101e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c4  08001670  08001670  00011670  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001734  08001734  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001734  08001734  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001734  08001734  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001734  08001734  00011734  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001738  08001738  00011738  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800173c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000064  080017a0  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000098  080017a0  00020098  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000225a  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000062d  00000000  00000000  000222ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000138  00000000  00000000  00022920  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000100  00000000  00000000  00022a58  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a1c  00000000  00000000  00022b58  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000126e  00000000  00000000  00025574  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009420  00000000  00000000  000267e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002fc02  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b38  00000000  00000000  0002fc80  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	; (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	; (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	; (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	20000064 	.word	0x20000064
 80001fc:	00000000 	.word	0x00000000
 8000200:	08001658 	.word	0x08001658

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	; (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	; (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	; (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	20000068 	.word	0x20000068
 800021c:	08001658 	.word	0x08001658

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <main>:
	0,								// 13 Reserved
	0,								// 14 PendSV
	(unsigned long *)systick_handler// 15 Systick
};

int main() {
 80002c0:	b580      	push	{r7, lr}
 80002c2:	af00      	add	r7, sp, #0

	printf("init section\n");
 80002c4:	4875      	ldr	r0, [pc, #468]	; (800049c <main+0x1dc>)
 80002c6:	f000 faf3 	bl	80008b0 <puts>
    // enable GPIOA clock
    *RCC_APB1ENR = 0x3; // + GPIOA? 0x03
 80002ca:	4b75      	ldr	r3, [pc, #468]	; (80004a0 <main+0x1e0>)
 80002cc:	2203      	movs	r2, #3
 80002ce:	601a      	str	r2, [r3, #0]
    setbit(*GPIOA_MODER, 10);
 80002d0:	4b74      	ldr	r3, [pc, #464]	; (80004a4 <main+0x1e4>)
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	4a73      	ldr	r2, [pc, #460]	; (80004a4 <main+0x1e4>)
 80002d6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80002da:	6013      	str	r3, [r2, #0]
    // change mode of 6 - MODER[11:10] = 0x01
    setbit(*GPIOA_MODER, 12);
 80002dc:	4b71      	ldr	r3, [pc, #452]	; (80004a4 <main+0x1e4>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	4a70      	ldr	r2, [pc, #448]	; (80004a4 <main+0x1e4>)
 80002e2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80002e6:	6013      	str	r3, [r2, #0]
    setbit(*GPIOA_MODER, 14);
 80002e8:	4b6e      	ldr	r3, [pc, #440]	; (80004a4 <main+0x1e4>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	4a6d      	ldr	r2, [pc, #436]	; (80004a4 <main+0x1e4>)
 80002ee:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002f2:	6013      	str	r3, [r2, #0]
    //*RCC_APB1ENR = 0x2;
    setbit(*GPIOB_MODER, 12);
 80002f4:	4b6c      	ldr	r3, [pc, #432]	; (80004a8 <main+0x1e8>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	4a6b      	ldr	r2, [pc, #428]	; (80004a8 <main+0x1e8>)
 80002fa:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80002fe:	6013      	str	r3, [r2, #0]

    // Initialize systick without interrupt
     init_systick(1000, 0);
 8000300:	2100      	movs	r1, #0
 8000302:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000306:	f000 f8f5 	bl	80004f4 <init_systick>
    // Initialize systick with interrupt
    //  NOTE: comment out inside while loop
    //init_systick(2000000, 1);

    printf("loop begins\n");
 800030a:	4868      	ldr	r0, [pc, #416]	; (80004ac <main+0x1ec>)
 800030c:	f000 fad0 	bl	80008b0 <puts>

    t = 500;
 8000310:	4b67      	ldr	r3, [pc, #412]	; (80004b0 <main+0x1f0>)
 8000312:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8000316:	601a      	str	r2, [r3, #0]
    while(1) {

    	if (getbit(*GPIOA_IDR, 4) == 0){
 8000318:	4b66      	ldr	r3, [pc, #408]	; (80004b4 <main+0x1f4>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	f003 0310 	and.w	r3, r3, #16
 8000320:	2b00      	cmp	r3, #0
 8000322:	d102      	bne.n	800032a <main+0x6a>
    		t = 200;
 8000324:	4b62      	ldr	r3, [pc, #392]	; (80004b0 <main+0x1f0>)
 8000326:	22c8      	movs	r2, #200	; 0xc8
 8000328:	601a      	str	r2, [r3, #0]
    	}
    	if (getbit(*GPIOA_IDR, 4) == 1){
 800032a:	4b62      	ldr	r3, [pc, #392]	; (80004b4 <main+0x1f4>)
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	f003 0310 	and.w	r3, r3, #16
 8000332:	2b00      	cmp	r3, #0
 8000334:	d003      	beq.n	800033e <main+0x7e>
    	    t = 500;
 8000336:	4b5e      	ldr	r3, [pc, #376]	; (80004b0 <main+0x1f0>)
 8000338:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800033c:	601a      	str	r2, [r3, #0]
    	}

    	if (getbit(*GPIOA_IDR, 1) == 0){
 800033e:	4b5d      	ldr	r3, [pc, #372]	; (80004b4 <main+0x1f4>)
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	f003 0302 	and.w	r3, r3, #2
 8000346:	2b00      	cmp	r3, #0
 8000348:	d148      	bne.n	80003dc <main+0x11c>
    		//two by two snake
    		clearbit(*GPIOA_ODR, 5);
 800034a:	4b5b      	ldr	r3, [pc, #364]	; (80004b8 <main+0x1f8>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	4a5a      	ldr	r2, [pc, #360]	; (80004b8 <main+0x1f8>)
 8000350:	f023 0320 	bic.w	r3, r3, #32
 8000354:	6013      	str	r3, [r2, #0]
    		delay_ms(t);
 8000356:	4b56      	ldr	r3, [pc, #344]	; (80004b0 <main+0x1f0>)
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	4618      	mov	r0, r3
 800035c:	f000 f8f0 	bl	8000540 <delay_ms>
    		clearbit(*GPIOA_ODR, 6);
 8000360:	4b55      	ldr	r3, [pc, #340]	; (80004b8 <main+0x1f8>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	4a54      	ldr	r2, [pc, #336]	; (80004b8 <main+0x1f8>)
 8000366:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800036a:	6013      	str	r3, [r2, #0]
    		delay_ms(t);
 800036c:	4b50      	ldr	r3, [pc, #320]	; (80004b0 <main+0x1f0>)
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	4618      	mov	r0, r3
 8000372:	f000 f8e5 	bl	8000540 <delay_ms>
    		setbit(*GPIOA_ODR, 5);
 8000376:	4b50      	ldr	r3, [pc, #320]	; (80004b8 <main+0x1f8>)
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	4a4f      	ldr	r2, [pc, #316]	; (80004b8 <main+0x1f8>)
 800037c:	f043 0320 	orr.w	r3, r3, #32
 8000380:	6013      	str	r3, [r2, #0]
    		clearbit(*GPIOA_ODR, 7);
 8000382:	4b4d      	ldr	r3, [pc, #308]	; (80004b8 <main+0x1f8>)
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	4a4c      	ldr	r2, [pc, #304]	; (80004b8 <main+0x1f8>)
 8000388:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800038c:	6013      	str	r3, [r2, #0]
    		delay_ms(t);
 800038e:	4b48      	ldr	r3, [pc, #288]	; (80004b0 <main+0x1f0>)
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	4618      	mov	r0, r3
 8000394:	f000 f8d4 	bl	8000540 <delay_ms>
    		setbit(*GPIOA_ODR, 6);
 8000398:	4b47      	ldr	r3, [pc, #284]	; (80004b8 <main+0x1f8>)
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	4a46      	ldr	r2, [pc, #280]	; (80004b8 <main+0x1f8>)
 800039e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003a2:	6013      	str	r3, [r2, #0]
    		clearbit(*GPIOB_ODR, 6);
 80003a4:	4b45      	ldr	r3, [pc, #276]	; (80004bc <main+0x1fc>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	4a44      	ldr	r2, [pc, #272]	; (80004bc <main+0x1fc>)
 80003aa:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80003ae:	6013      	str	r3, [r2, #0]
    		delay_ms(t);
 80003b0:	4b3f      	ldr	r3, [pc, #252]	; (80004b0 <main+0x1f0>)
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	4618      	mov	r0, r3
 80003b6:	f000 f8c3 	bl	8000540 <delay_ms>
    		setbit(*GPIOA_ODR, 7);
 80003ba:	4b3f      	ldr	r3, [pc, #252]	; (80004b8 <main+0x1f8>)
 80003bc:	681b      	ldr	r3, [r3, #0]
 80003be:	4a3e      	ldr	r2, [pc, #248]	; (80004b8 <main+0x1f8>)
 80003c0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003c4:	6013      	str	r3, [r2, #0]
    		delay_ms(t);
 80003c6:	4b3a      	ldr	r3, [pc, #232]	; (80004b0 <main+0x1f0>)
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	4618      	mov	r0, r3
 80003cc:	f000 f8b8 	bl	8000540 <delay_ms>
    		setbit(*GPIOB_ODR, 6);
 80003d0:	4b3a      	ldr	r3, [pc, #232]	; (80004bc <main+0x1fc>)
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	4a39      	ldr	r2, [pc, #228]	; (80004bc <main+0x1fc>)
 80003d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003da:	6013      	str	r3, [r2, #0]
    	}

    	if (getbit(*GPIOA_IDR, 1) == 1){
 80003dc:	4b35      	ldr	r3, [pc, #212]	; (80004b4 <main+0x1f4>)
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	f003 0302 	and.w	r3, r3, #2
 80003e4:	2b00      	cmp	r3, #0
 80003e6:	d097      	beq.n	8000318 <main+0x58>
    		//normal snake
    		clearbit(*GPIOA_ODR, 5);
 80003e8:	4b33      	ldr	r3, [pc, #204]	; (80004b8 <main+0x1f8>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	4a32      	ldr	r2, [pc, #200]	; (80004b8 <main+0x1f8>)
 80003ee:	f023 0320 	bic.w	r3, r3, #32
 80003f2:	6013      	str	r3, [r2, #0]
    		delay_ms(t);
 80003f4:	4b2e      	ldr	r3, [pc, #184]	; (80004b0 <main+0x1f0>)
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	4618      	mov	r0, r3
 80003fa:	f000 f8a1 	bl	8000540 <delay_ms>
    		clearbit(*GPIOA_ODR, 6);
 80003fe:	4b2e      	ldr	r3, [pc, #184]	; (80004b8 <main+0x1f8>)
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	4a2d      	ldr	r2, [pc, #180]	; (80004b8 <main+0x1f8>)
 8000404:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000408:	6013      	str	r3, [r2, #0]
    		delay_ms(t);
 800040a:	4b29      	ldr	r3, [pc, #164]	; (80004b0 <main+0x1f0>)
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	4618      	mov	r0, r3
 8000410:	f000 f896 	bl	8000540 <delay_ms>
    		clearbit(*GPIOA_ODR, 7);
 8000414:	4b28      	ldr	r3, [pc, #160]	; (80004b8 <main+0x1f8>)
 8000416:	681b      	ldr	r3, [r3, #0]
 8000418:	4a27      	ldr	r2, [pc, #156]	; (80004b8 <main+0x1f8>)
 800041a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800041e:	6013      	str	r3, [r2, #0]
    		delay_ms(t);
 8000420:	4b23      	ldr	r3, [pc, #140]	; (80004b0 <main+0x1f0>)
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	4618      	mov	r0, r3
 8000426:	f000 f88b 	bl	8000540 <delay_ms>
    		clearbit(*GPIOB_ODR, 6);
 800042a:	4b24      	ldr	r3, [pc, #144]	; (80004bc <main+0x1fc>)
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	4a23      	ldr	r2, [pc, #140]	; (80004bc <main+0x1fc>)
 8000430:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000434:	6013      	str	r3, [r2, #0]
          	delay_ms(t);
 8000436:	4b1e      	ldr	r3, [pc, #120]	; (80004b0 <main+0x1f0>)
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	4618      	mov	r0, r3
 800043c:	f000 f880 	bl	8000540 <delay_ms>
          	setbit(*GPIOA_ODR, 5);
 8000440:	4b1d      	ldr	r3, [pc, #116]	; (80004b8 <main+0x1f8>)
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	4a1c      	ldr	r2, [pc, #112]	; (80004b8 <main+0x1f8>)
 8000446:	f043 0320 	orr.w	r3, r3, #32
 800044a:	6013      	str	r3, [r2, #0]
           	delay_ms(t);
 800044c:	4b18      	ldr	r3, [pc, #96]	; (80004b0 <main+0x1f0>)
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	4618      	mov	r0, r3
 8000452:	f000 f875 	bl	8000540 <delay_ms>
           	setbit(*GPIOA_ODR, 6);
 8000456:	4b18      	ldr	r3, [pc, #96]	; (80004b8 <main+0x1f8>)
 8000458:	681b      	ldr	r3, [r3, #0]
 800045a:	4a17      	ldr	r2, [pc, #92]	; (80004b8 <main+0x1f8>)
 800045c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000460:	6013      	str	r3, [r2, #0]
            delay_ms(t);
 8000462:	4b13      	ldr	r3, [pc, #76]	; (80004b0 <main+0x1f0>)
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	4618      	mov	r0, r3
 8000468:	f000 f86a 	bl	8000540 <delay_ms>
            setbit(*GPIOA_ODR, 7);
 800046c:	4b12      	ldr	r3, [pc, #72]	; (80004b8 <main+0x1f8>)
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	4a11      	ldr	r2, [pc, #68]	; (80004b8 <main+0x1f8>)
 8000472:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000476:	6013      	str	r3, [r2, #0]
         	delay_ms(t);
 8000478:	4b0d      	ldr	r3, [pc, #52]	; (80004b0 <main+0x1f0>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	4618      	mov	r0, r3
 800047e:	f000 f85f 	bl	8000540 <delay_ms>
         	setbit(*GPIOB_ODR, 6);
 8000482:	4b0e      	ldr	r3, [pc, #56]	; (80004bc <main+0x1fc>)
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	4a0d      	ldr	r2, [pc, #52]	; (80004bc <main+0x1fc>)
 8000488:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800048c:	6013      	str	r3, [r2, #0]
          	delay_ms(t);
 800048e:	4b08      	ldr	r3, [pc, #32]	; (80004b0 <main+0x1f0>)
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	4618      	mov	r0, r3
 8000494:	f000 f854 	bl	8000540 <delay_ms>
    	if (getbit(*GPIOA_IDR, 4) == 0){
 8000498:	e73e      	b.n	8000318 <main+0x58>
 800049a:	bf00      	nop
 800049c:	08001670 	.word	0x08001670
 80004a0:	40023830 	.word	0x40023830
 80004a4:	40020000 	.word	0x40020000
 80004a8:	40020400 	.word	0x40020400
 80004ac:	08001680 	.word	0x08001680
 80004b0:	20000090 	.word	0x20000090
 80004b4:	40020010 	.word	0x40020010
 80004b8:	40020014 	.word	0x40020014
 80004bc:	40020414 	.word	0x40020414

080004c0 <systick_handler>:
   D4 - enable clock for GPIOB in RCC_APB1ENR
      - check address of GPIOB, resp. GPIOB_MODER a GPIOB_ODR
      - set/reset 6th bit of GPIOB_ODR
 */

void systick_handler(void) {
 80004c0:	b580      	push	{r7, lr}
 80004c2:	af00      	add	r7, sp, #0
	printf("seconds = %lu\n", seconds++);
 80004c4:	4b08      	ldr	r3, [pc, #32]	; (80004e8 <systick_handler+0x28>)
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	1c5a      	adds	r2, r3, #1
 80004ca:	4907      	ldr	r1, [pc, #28]	; (80004e8 <systick_handler+0x28>)
 80004cc:	600a      	str	r2, [r1, #0]
 80004ce:	4619      	mov	r1, r3
 80004d0:	4806      	ldr	r0, [pc, #24]	; (80004ec <systick_handler+0x2c>)
 80004d2:	f000 f979 	bl	80007c8 <iprintf>
	togglebit(*GPIOA_ODR, 6);
 80004d6:	4b06      	ldr	r3, [pc, #24]	; (80004f0 <systick_handler+0x30>)
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	4a05      	ldr	r2, [pc, #20]	; (80004f0 <systick_handler+0x30>)
 80004dc:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 80004e0:	6013      	str	r3, [r2, #0]
}
 80004e2:	bf00      	nop
 80004e4:	bd80      	pop	{r7, pc}
 80004e6:	bf00      	nop
 80004e8:	20000080 	.word	0x20000080
 80004ec:	0800168c 	.word	0x0800168c
 80004f0:	40020014 	.word	0x40020014

080004f4 <init_systick>:

void init_systick(unsigned long s, unsigned char en)
{
 80004f4:	b480      	push	{r7}
 80004f6:	b083      	sub	sp, #12
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
 80004fc:	460b      	mov	r3, r1
 80004fe:	70fb      	strb	r3, [r7, #3]
	// Systick - 24b counter - 8388608
	// Main clock source is running with HSI by default which is at 16 Mhz.
	// SysTick clock source can be set with CTRL register (Bit 2)
	// 0: AHB/8 -> (2 MHz)
	// 1: Processor clock (AHB) -> (16 MHz)
	SYSTICK->CTRL |= 0x00000; // Currently set to run at 2 Mhz -> 5e-7s
 8000500:	4b0e      	ldr	r3, [pc, #56]	; (800053c <init_systick+0x48>)
 8000502:	4a0e      	ldr	r2, [pc, #56]	; (800053c <init_systick+0x48>)
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	6013      	str	r3, [r2, #0]
	// Enable callback
	SYSTICK->CTRL |= (en << 1); // if argument 'en' is 1, then interrupt is enabled
 8000508:	4b0c      	ldr	r3, [pc, #48]	; (800053c <init_systick+0x48>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	78fa      	ldrb	r2, [r7, #3]
 800050e:	0052      	lsls	r2, r2, #1
 8000510:	4611      	mov	r1, r2
 8000512:	4a0a      	ldr	r2, [pc, #40]	; (800053c <init_systick+0x48>)
 8000514:	430b      	orrs	r3, r1
 8000516:	6013      	str	r3, [r2, #0]
	// Load the reload value
	SYSTICK->LOAD = s;
 8000518:	4a08      	ldr	r2, [pc, #32]	; (800053c <init_systick+0x48>)
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	6053      	str	r3, [r2, #4]
	// Set the current value to 0
	SYSTICK->VAL = 0;
 800051e:	4b07      	ldr	r3, [pc, #28]	; (800053c <init_systick+0x48>)
 8000520:	2200      	movs	r2, #0
 8000522:	609a      	str	r2, [r3, #8]
	// Enable SysTick
	SYSTICK->CTRL |= (1 << 0);		// setbit(SYSTICK->CTRL, 1)
 8000524:	4b05      	ldr	r3, [pc, #20]	; (800053c <init_systick+0x48>)
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	4a04      	ldr	r2, [pc, #16]	; (800053c <init_systick+0x48>)
 800052a:	f043 0301 	orr.w	r3, r3, #1
 800052e:	6013      	str	r3, [r2, #0]
}
 8000530:	bf00      	nop
 8000532:	370c      	adds	r7, #12
 8000534:	46bd      	mov	sp, r7
 8000536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053a:	4770      	bx	lr
 800053c:	e000e010 	.word	0xe000e010

08000540 <delay_ms>:
 * Millisecond delay function.
 *   volatile keyword is used so that compiler does not optimize it away
 * Polling method (If interrupt is not enabled)
 */
void delay_ms(volatile unsigned long s)
{
 8000540:	b480      	push	{r7}
 8000542:	b083      	sub	sp, #12
 8000544:	af00      	add	r7, sp, #0
 8000546:	6078      	str	r0, [r7, #4]
	for(s; s>0; s--){
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	e009      	b.n	8000560 <delay_ms+0x20>
		while(!(SYSTICK->CTRL & (1 << 16))); // Wait until COUNTFLAG is 1
 800054c:	bf00      	nop
 800054e:	4b09      	ldr	r3, [pc, #36]	; (8000574 <delay_ms+0x34>)
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8000556:	2b00      	cmp	r3, #0
 8000558:	d0f9      	beq.n	800054e <delay_ms+0xe>
	for(s; s>0; s--){
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	3b01      	subs	r3, #1
 800055e:	607b      	str	r3, [r7, #4]
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	2b00      	cmp	r3, #0
 8000564:	d1f2      	bne.n	800054c <delay_ms+0xc>
	}
}
 8000566:	bf00      	nop
 8000568:	370c      	adds	r7, #12
 800056a:	46bd      	mov	sp, r7
 800056c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000570:	4770      	bx	lr
 8000572:	bf00      	nop
 8000574:	e000e010 	.word	0xe000e010

08000578 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0     *((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN           *((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000578:	b480      	push	{r7}
 800057a:	b083      	sub	sp, #12
 800057c:	af00      	add	r7, sp, #0
 800057e:	4603      	mov	r3, r0
 8000580:	71fb      	strb	r3, [r7, #7]
    //Enable TRCENA
    DEMCR |= ( 1 << 24);
 8000582:	4b0f      	ldr	r3, [pc, #60]	; (80005c0 <ITM_SendChar+0x48>)
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	4a0e      	ldr	r2, [pc, #56]	; (80005c0 <ITM_SendChar+0x48>)
 8000588:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800058c:	6013      	str	r3, [r2, #0]

    //enable stimulus port 0
    ITM_TRACE_EN |= ( 1 << 0);
 800058e:	4b0d      	ldr	r3, [pc, #52]	; (80005c4 <ITM_SendChar+0x4c>)
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	4a0c      	ldr	r2, [pc, #48]	; (80005c4 <ITM_SendChar+0x4c>)
 8000594:	f043 0301 	orr.w	r3, r3, #1
 8000598:	6013      	str	r3, [r2, #0]

    // read FIFO status in bit [0]:
    while(!(ITM_STIMULUS_PORT0 & 1));
 800059a:	bf00      	nop
 800059c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80005a0:	681b      	ldr	r3, [r3, #0]
 80005a2:	f003 0301 	and.w	r3, r3, #1
 80005a6:	2b00      	cmp	r3, #0
 80005a8:	d0f8      	beq.n	800059c <ITM_SendChar+0x24>

    //Write to ITM stimulus port0
    ITM_STIMULUS_PORT0 = ch;
 80005aa:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80005ae:	79fb      	ldrb	r3, [r7, #7]
 80005b0:	6013      	str	r3, [r2, #0]
}
 80005b2:	bf00      	nop
 80005b4:	370c      	adds	r7, #12
 80005b6:	46bd      	mov	sp, r7
 80005b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005bc:	4770      	bx	lr
 80005be:	bf00      	nop
 80005c0:	e000edfc 	.word	0xe000edfc
 80005c4:	e0000e00 	.word	0xe0000e00

080005c8 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80005c8:	b580      	push	{r7, lr}
 80005ca:	b086      	sub	sp, #24
 80005cc:	af00      	add	r7, sp, #0
 80005ce:	60f8      	str	r0, [r7, #12]
 80005d0:	60b9      	str	r1, [r7, #8]
 80005d2:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005d4:	2300      	movs	r3, #0
 80005d6:	617b      	str	r3, [r7, #20]
 80005d8:	e00a      	b.n	80005f0 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80005da:	f3af 8000 	nop.w
 80005de:	4601      	mov	r1, r0
 80005e0:	68bb      	ldr	r3, [r7, #8]
 80005e2:	1c5a      	adds	r2, r3, #1
 80005e4:	60ba      	str	r2, [r7, #8]
 80005e6:	b2ca      	uxtb	r2, r1
 80005e8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005ea:	697b      	ldr	r3, [r7, #20]
 80005ec:	3301      	adds	r3, #1
 80005ee:	617b      	str	r3, [r7, #20]
 80005f0:	697a      	ldr	r2, [r7, #20]
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	429a      	cmp	r2, r3
 80005f6:	dbf0      	blt.n	80005da <_read+0x12>
	}

return len;
 80005f8:	687b      	ldr	r3, [r7, #4]
}
 80005fa:	4618      	mov	r0, r3
 80005fc:	3718      	adds	r7, #24
 80005fe:	46bd      	mov	sp, r7
 8000600:	bd80      	pop	{r7, pc}

08000602 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000602:	b580      	push	{r7, lr}
 8000604:	b086      	sub	sp, #24
 8000606:	af00      	add	r7, sp, #0
 8000608:	60f8      	str	r0, [r7, #12]
 800060a:	60b9      	str	r1, [r7, #8]
 800060c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800060e:	2300      	movs	r3, #0
 8000610:	617b      	str	r3, [r7, #20]
 8000612:	e009      	b.n	8000628 <_write+0x26>
	{
		// __io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000614:	68bb      	ldr	r3, [r7, #8]
 8000616:	1c5a      	adds	r2, r3, #1
 8000618:	60ba      	str	r2, [r7, #8]
 800061a:	781b      	ldrb	r3, [r3, #0]
 800061c:	4618      	mov	r0, r3
 800061e:	f7ff ffab 	bl	8000578 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000622:	697b      	ldr	r3, [r7, #20]
 8000624:	3301      	adds	r3, #1
 8000626:	617b      	str	r3, [r7, #20]
 8000628:	697a      	ldr	r2, [r7, #20]
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	429a      	cmp	r2, r3
 800062e:	dbf1      	blt.n	8000614 <_write+0x12>
	}
	return len;
 8000630:	687b      	ldr	r3, [r7, #4]
}
 8000632:	4618      	mov	r0, r3
 8000634:	3718      	adds	r7, #24
 8000636:	46bd      	mov	sp, r7
 8000638:	bd80      	pop	{r7, pc}

0800063a <_close>:

int _close(int file)
{
 800063a:	b480      	push	{r7}
 800063c:	b083      	sub	sp, #12
 800063e:	af00      	add	r7, sp, #0
 8000640:	6078      	str	r0, [r7, #4]
	return -1;
 8000642:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000646:	4618      	mov	r0, r3
 8000648:	370c      	adds	r7, #12
 800064a:	46bd      	mov	sp, r7
 800064c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000650:	4770      	bx	lr

08000652 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000652:	b480      	push	{r7}
 8000654:	b083      	sub	sp, #12
 8000656:	af00      	add	r7, sp, #0
 8000658:	6078      	str	r0, [r7, #4]
 800065a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800065c:	683b      	ldr	r3, [r7, #0]
 800065e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000662:	605a      	str	r2, [r3, #4]
	return 0;
 8000664:	2300      	movs	r3, #0
}
 8000666:	4618      	mov	r0, r3
 8000668:	370c      	adds	r7, #12
 800066a:	46bd      	mov	sp, r7
 800066c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000670:	4770      	bx	lr

08000672 <_isatty>:

int _isatty(int file)
{
 8000672:	b480      	push	{r7}
 8000674:	b083      	sub	sp, #12
 8000676:	af00      	add	r7, sp, #0
 8000678:	6078      	str	r0, [r7, #4]
	return 1;
 800067a:	2301      	movs	r3, #1
}
 800067c:	4618      	mov	r0, r3
 800067e:	370c      	adds	r7, #12
 8000680:	46bd      	mov	sp, r7
 8000682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000686:	4770      	bx	lr

08000688 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000688:	b480      	push	{r7}
 800068a:	b085      	sub	sp, #20
 800068c:	af00      	add	r7, sp, #0
 800068e:	60f8      	str	r0, [r7, #12]
 8000690:	60b9      	str	r1, [r7, #8]
 8000692:	607a      	str	r2, [r7, #4]
	return 0;
 8000694:	2300      	movs	r3, #0
}
 8000696:	4618      	mov	r0, r3
 8000698:	3714      	adds	r7, #20
 800069a:	46bd      	mov	sp, r7
 800069c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006a0:	4770      	bx	lr
	...

080006a4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80006a4:	b580      	push	{r7, lr}
 80006a6:	b086      	sub	sp, #24
 80006a8:	af00      	add	r7, sp, #0
 80006aa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80006ac:	4a14      	ldr	r2, [pc, #80]	; (8000700 <_sbrk+0x5c>)
 80006ae:	4b15      	ldr	r3, [pc, #84]	; (8000704 <_sbrk+0x60>)
 80006b0:	1ad3      	subs	r3, r2, r3
 80006b2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80006b4:	697b      	ldr	r3, [r7, #20]
 80006b6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80006b8:	4b13      	ldr	r3, [pc, #76]	; (8000708 <_sbrk+0x64>)
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	2b00      	cmp	r3, #0
 80006be:	d102      	bne.n	80006c6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80006c0:	4b11      	ldr	r3, [pc, #68]	; (8000708 <_sbrk+0x64>)
 80006c2:	4a12      	ldr	r2, [pc, #72]	; (800070c <_sbrk+0x68>)
 80006c4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80006c6:	4b10      	ldr	r3, [pc, #64]	; (8000708 <_sbrk+0x64>)
 80006c8:	681a      	ldr	r2, [r3, #0]
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	4413      	add	r3, r2
 80006ce:	693a      	ldr	r2, [r7, #16]
 80006d0:	429a      	cmp	r2, r3
 80006d2:	d207      	bcs.n	80006e4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80006d4:	f000 f846 	bl	8000764 <__errno>
 80006d8:	4602      	mov	r2, r0
 80006da:	230c      	movs	r3, #12
 80006dc:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 80006de:	f04f 33ff 	mov.w	r3, #4294967295
 80006e2:	e009      	b.n	80006f8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80006e4:	4b08      	ldr	r3, [pc, #32]	; (8000708 <_sbrk+0x64>)
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80006ea:	4b07      	ldr	r3, [pc, #28]	; (8000708 <_sbrk+0x64>)
 80006ec:	681a      	ldr	r2, [r3, #0]
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	4413      	add	r3, r2
 80006f2:	4a05      	ldr	r2, [pc, #20]	; (8000708 <_sbrk+0x64>)
 80006f4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80006f6:	68fb      	ldr	r3, [r7, #12]
}
 80006f8:	4618      	mov	r0, r3
 80006fa:	3718      	adds	r7, #24
 80006fc:	46bd      	mov	sp, r7
 80006fe:	bd80      	pop	{r7, pc}
 8000700:	20018000 	.word	0x20018000
 8000704:	00000400 	.word	0x00000400
 8000708:	20000084 	.word	0x20000084
 800070c:	20000098 	.word	0x20000098

08000710 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000710:	480d      	ldr	r0, [pc, #52]	; (8000748 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000712:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000714:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000718:	480c      	ldr	r0, [pc, #48]	; (800074c <LoopForever+0x6>)
  ldr r1, =_edata
 800071a:	490d      	ldr	r1, [pc, #52]	; (8000750 <LoopForever+0xa>)
  ldr r2, =_sidata
 800071c:	4a0d      	ldr	r2, [pc, #52]	; (8000754 <LoopForever+0xe>)
  movs r3, #0
 800071e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000720:	e002      	b.n	8000728 <LoopCopyDataInit>

08000722 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000722:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000724:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000726:	3304      	adds	r3, #4

08000728 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000728:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800072a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800072c:	d3f9      	bcc.n	8000722 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800072e:	4a0a      	ldr	r2, [pc, #40]	; (8000758 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000730:	4c0a      	ldr	r4, [pc, #40]	; (800075c <LoopForever+0x16>)
  movs r3, #0
 8000732:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000734:	e001      	b.n	800073a <LoopFillZerobss>

08000736 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000736:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000738:	3204      	adds	r2, #4

0800073a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800073a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800073c:	d3fb      	bcc.n	8000736 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800073e:	f000 f817 	bl	8000770 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000742:	f7ff fdbd 	bl	80002c0 <main>

08000746 <LoopForever>:

LoopForever:
    b LoopForever
 8000746:	e7fe      	b.n	8000746 <LoopForever>
  ldr   r0, =_estack
 8000748:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800074c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000750:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000754:	0800173c 	.word	0x0800173c
  ldr r2, =_sbss
 8000758:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800075c:	20000098 	.word	0x20000098

08000760 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000760:	e7fe      	b.n	8000760 <ADC_IRQHandler>
	...

08000764 <__errno>:
 8000764:	4b01      	ldr	r3, [pc, #4]	; (800076c <__errno+0x8>)
 8000766:	6818      	ldr	r0, [r3, #0]
 8000768:	4770      	bx	lr
 800076a:	bf00      	nop
 800076c:	20000000 	.word	0x20000000

08000770 <__libc_init_array>:
 8000770:	b570      	push	{r4, r5, r6, lr}
 8000772:	4e0d      	ldr	r6, [pc, #52]	; (80007a8 <__libc_init_array+0x38>)
 8000774:	4c0d      	ldr	r4, [pc, #52]	; (80007ac <__libc_init_array+0x3c>)
 8000776:	1ba4      	subs	r4, r4, r6
 8000778:	10a4      	asrs	r4, r4, #2
 800077a:	2500      	movs	r5, #0
 800077c:	42a5      	cmp	r5, r4
 800077e:	d109      	bne.n	8000794 <__libc_init_array+0x24>
 8000780:	4e0b      	ldr	r6, [pc, #44]	; (80007b0 <__libc_init_array+0x40>)
 8000782:	4c0c      	ldr	r4, [pc, #48]	; (80007b4 <__libc_init_array+0x44>)
 8000784:	f000 ff68 	bl	8001658 <_init>
 8000788:	1ba4      	subs	r4, r4, r6
 800078a:	10a4      	asrs	r4, r4, #2
 800078c:	2500      	movs	r5, #0
 800078e:	42a5      	cmp	r5, r4
 8000790:	d105      	bne.n	800079e <__libc_init_array+0x2e>
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000798:	4798      	blx	r3
 800079a:	3501      	adds	r5, #1
 800079c:	e7ee      	b.n	800077c <__libc_init_array+0xc>
 800079e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80007a2:	4798      	blx	r3
 80007a4:	3501      	adds	r5, #1
 80007a6:	e7f2      	b.n	800078e <__libc_init_array+0x1e>
 80007a8:	08001734 	.word	0x08001734
 80007ac:	08001734 	.word	0x08001734
 80007b0:	08001734 	.word	0x08001734
 80007b4:	08001738 	.word	0x08001738

080007b8 <memset>:
 80007b8:	4402      	add	r2, r0
 80007ba:	4603      	mov	r3, r0
 80007bc:	4293      	cmp	r3, r2
 80007be:	d100      	bne.n	80007c2 <memset+0xa>
 80007c0:	4770      	bx	lr
 80007c2:	f803 1b01 	strb.w	r1, [r3], #1
 80007c6:	e7f9      	b.n	80007bc <memset+0x4>

080007c8 <iprintf>:
 80007c8:	b40f      	push	{r0, r1, r2, r3}
 80007ca:	4b0a      	ldr	r3, [pc, #40]	; (80007f4 <iprintf+0x2c>)
 80007cc:	b513      	push	{r0, r1, r4, lr}
 80007ce:	681c      	ldr	r4, [r3, #0]
 80007d0:	b124      	cbz	r4, 80007dc <iprintf+0x14>
 80007d2:	69a3      	ldr	r3, [r4, #24]
 80007d4:	b913      	cbnz	r3, 80007dc <iprintf+0x14>
 80007d6:	4620      	mov	r0, r4
 80007d8:	f000 fa22 	bl	8000c20 <__sinit>
 80007dc:	ab05      	add	r3, sp, #20
 80007de:	9a04      	ldr	r2, [sp, #16]
 80007e0:	68a1      	ldr	r1, [r4, #8]
 80007e2:	9301      	str	r3, [sp, #4]
 80007e4:	4620      	mov	r0, r4
 80007e6:	f000 fbdb 	bl	8000fa0 <_vfiprintf_r>
 80007ea:	b002      	add	sp, #8
 80007ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007f0:	b004      	add	sp, #16
 80007f2:	4770      	bx	lr
 80007f4:	20000000 	.word	0x20000000

080007f8 <_puts_r>:
 80007f8:	b570      	push	{r4, r5, r6, lr}
 80007fa:	460e      	mov	r6, r1
 80007fc:	4605      	mov	r5, r0
 80007fe:	b118      	cbz	r0, 8000808 <_puts_r+0x10>
 8000800:	6983      	ldr	r3, [r0, #24]
 8000802:	b90b      	cbnz	r3, 8000808 <_puts_r+0x10>
 8000804:	f000 fa0c 	bl	8000c20 <__sinit>
 8000808:	69ab      	ldr	r3, [r5, #24]
 800080a:	68ac      	ldr	r4, [r5, #8]
 800080c:	b913      	cbnz	r3, 8000814 <_puts_r+0x1c>
 800080e:	4628      	mov	r0, r5
 8000810:	f000 fa06 	bl	8000c20 <__sinit>
 8000814:	4b23      	ldr	r3, [pc, #140]	; (80008a4 <_puts_r+0xac>)
 8000816:	429c      	cmp	r4, r3
 8000818:	d117      	bne.n	800084a <_puts_r+0x52>
 800081a:	686c      	ldr	r4, [r5, #4]
 800081c:	89a3      	ldrh	r3, [r4, #12]
 800081e:	071b      	lsls	r3, r3, #28
 8000820:	d51d      	bpl.n	800085e <_puts_r+0x66>
 8000822:	6923      	ldr	r3, [r4, #16]
 8000824:	b1db      	cbz	r3, 800085e <_puts_r+0x66>
 8000826:	3e01      	subs	r6, #1
 8000828:	68a3      	ldr	r3, [r4, #8]
 800082a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800082e:	3b01      	subs	r3, #1
 8000830:	60a3      	str	r3, [r4, #8]
 8000832:	b9e9      	cbnz	r1, 8000870 <_puts_r+0x78>
 8000834:	2b00      	cmp	r3, #0
 8000836:	da2e      	bge.n	8000896 <_puts_r+0x9e>
 8000838:	4622      	mov	r2, r4
 800083a:	210a      	movs	r1, #10
 800083c:	4628      	mov	r0, r5
 800083e:	f000 f83f 	bl	80008c0 <__swbuf_r>
 8000842:	3001      	adds	r0, #1
 8000844:	d011      	beq.n	800086a <_puts_r+0x72>
 8000846:	200a      	movs	r0, #10
 8000848:	e011      	b.n	800086e <_puts_r+0x76>
 800084a:	4b17      	ldr	r3, [pc, #92]	; (80008a8 <_puts_r+0xb0>)
 800084c:	429c      	cmp	r4, r3
 800084e:	d101      	bne.n	8000854 <_puts_r+0x5c>
 8000850:	68ac      	ldr	r4, [r5, #8]
 8000852:	e7e3      	b.n	800081c <_puts_r+0x24>
 8000854:	4b15      	ldr	r3, [pc, #84]	; (80008ac <_puts_r+0xb4>)
 8000856:	429c      	cmp	r4, r3
 8000858:	bf08      	it	eq
 800085a:	68ec      	ldreq	r4, [r5, #12]
 800085c:	e7de      	b.n	800081c <_puts_r+0x24>
 800085e:	4621      	mov	r1, r4
 8000860:	4628      	mov	r0, r5
 8000862:	f000 f87f 	bl	8000964 <__swsetup_r>
 8000866:	2800      	cmp	r0, #0
 8000868:	d0dd      	beq.n	8000826 <_puts_r+0x2e>
 800086a:	f04f 30ff 	mov.w	r0, #4294967295
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	2b00      	cmp	r3, #0
 8000872:	da04      	bge.n	800087e <_puts_r+0x86>
 8000874:	69a2      	ldr	r2, [r4, #24]
 8000876:	429a      	cmp	r2, r3
 8000878:	dc06      	bgt.n	8000888 <_puts_r+0x90>
 800087a:	290a      	cmp	r1, #10
 800087c:	d004      	beq.n	8000888 <_puts_r+0x90>
 800087e:	6823      	ldr	r3, [r4, #0]
 8000880:	1c5a      	adds	r2, r3, #1
 8000882:	6022      	str	r2, [r4, #0]
 8000884:	7019      	strb	r1, [r3, #0]
 8000886:	e7cf      	b.n	8000828 <_puts_r+0x30>
 8000888:	4622      	mov	r2, r4
 800088a:	4628      	mov	r0, r5
 800088c:	f000 f818 	bl	80008c0 <__swbuf_r>
 8000890:	3001      	adds	r0, #1
 8000892:	d1c9      	bne.n	8000828 <_puts_r+0x30>
 8000894:	e7e9      	b.n	800086a <_puts_r+0x72>
 8000896:	6823      	ldr	r3, [r4, #0]
 8000898:	200a      	movs	r0, #10
 800089a:	1c5a      	adds	r2, r3, #1
 800089c:	6022      	str	r2, [r4, #0]
 800089e:	7018      	strb	r0, [r3, #0]
 80008a0:	e7e5      	b.n	800086e <_puts_r+0x76>
 80008a2:	bf00      	nop
 80008a4:	080016c0 	.word	0x080016c0
 80008a8:	080016e0 	.word	0x080016e0
 80008ac:	080016a0 	.word	0x080016a0

080008b0 <puts>:
 80008b0:	4b02      	ldr	r3, [pc, #8]	; (80008bc <puts+0xc>)
 80008b2:	4601      	mov	r1, r0
 80008b4:	6818      	ldr	r0, [r3, #0]
 80008b6:	f7ff bf9f 	b.w	80007f8 <_puts_r>
 80008ba:	bf00      	nop
 80008bc:	20000000 	.word	0x20000000

080008c0 <__swbuf_r>:
 80008c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008c2:	460e      	mov	r6, r1
 80008c4:	4614      	mov	r4, r2
 80008c6:	4605      	mov	r5, r0
 80008c8:	b118      	cbz	r0, 80008d2 <__swbuf_r+0x12>
 80008ca:	6983      	ldr	r3, [r0, #24]
 80008cc:	b90b      	cbnz	r3, 80008d2 <__swbuf_r+0x12>
 80008ce:	f000 f9a7 	bl	8000c20 <__sinit>
 80008d2:	4b21      	ldr	r3, [pc, #132]	; (8000958 <__swbuf_r+0x98>)
 80008d4:	429c      	cmp	r4, r3
 80008d6:	d12a      	bne.n	800092e <__swbuf_r+0x6e>
 80008d8:	686c      	ldr	r4, [r5, #4]
 80008da:	69a3      	ldr	r3, [r4, #24]
 80008dc:	60a3      	str	r3, [r4, #8]
 80008de:	89a3      	ldrh	r3, [r4, #12]
 80008e0:	071a      	lsls	r2, r3, #28
 80008e2:	d52e      	bpl.n	8000942 <__swbuf_r+0x82>
 80008e4:	6923      	ldr	r3, [r4, #16]
 80008e6:	b363      	cbz	r3, 8000942 <__swbuf_r+0x82>
 80008e8:	6923      	ldr	r3, [r4, #16]
 80008ea:	6820      	ldr	r0, [r4, #0]
 80008ec:	1ac0      	subs	r0, r0, r3
 80008ee:	6963      	ldr	r3, [r4, #20]
 80008f0:	b2f6      	uxtb	r6, r6
 80008f2:	4283      	cmp	r3, r0
 80008f4:	4637      	mov	r7, r6
 80008f6:	dc04      	bgt.n	8000902 <__swbuf_r+0x42>
 80008f8:	4621      	mov	r1, r4
 80008fa:	4628      	mov	r0, r5
 80008fc:	f000 f926 	bl	8000b4c <_fflush_r>
 8000900:	bb28      	cbnz	r0, 800094e <__swbuf_r+0x8e>
 8000902:	68a3      	ldr	r3, [r4, #8]
 8000904:	3b01      	subs	r3, #1
 8000906:	60a3      	str	r3, [r4, #8]
 8000908:	6823      	ldr	r3, [r4, #0]
 800090a:	1c5a      	adds	r2, r3, #1
 800090c:	6022      	str	r2, [r4, #0]
 800090e:	701e      	strb	r6, [r3, #0]
 8000910:	6963      	ldr	r3, [r4, #20]
 8000912:	3001      	adds	r0, #1
 8000914:	4283      	cmp	r3, r0
 8000916:	d004      	beq.n	8000922 <__swbuf_r+0x62>
 8000918:	89a3      	ldrh	r3, [r4, #12]
 800091a:	07db      	lsls	r3, r3, #31
 800091c:	d519      	bpl.n	8000952 <__swbuf_r+0x92>
 800091e:	2e0a      	cmp	r6, #10
 8000920:	d117      	bne.n	8000952 <__swbuf_r+0x92>
 8000922:	4621      	mov	r1, r4
 8000924:	4628      	mov	r0, r5
 8000926:	f000 f911 	bl	8000b4c <_fflush_r>
 800092a:	b190      	cbz	r0, 8000952 <__swbuf_r+0x92>
 800092c:	e00f      	b.n	800094e <__swbuf_r+0x8e>
 800092e:	4b0b      	ldr	r3, [pc, #44]	; (800095c <__swbuf_r+0x9c>)
 8000930:	429c      	cmp	r4, r3
 8000932:	d101      	bne.n	8000938 <__swbuf_r+0x78>
 8000934:	68ac      	ldr	r4, [r5, #8]
 8000936:	e7d0      	b.n	80008da <__swbuf_r+0x1a>
 8000938:	4b09      	ldr	r3, [pc, #36]	; (8000960 <__swbuf_r+0xa0>)
 800093a:	429c      	cmp	r4, r3
 800093c:	bf08      	it	eq
 800093e:	68ec      	ldreq	r4, [r5, #12]
 8000940:	e7cb      	b.n	80008da <__swbuf_r+0x1a>
 8000942:	4621      	mov	r1, r4
 8000944:	4628      	mov	r0, r5
 8000946:	f000 f80d 	bl	8000964 <__swsetup_r>
 800094a:	2800      	cmp	r0, #0
 800094c:	d0cc      	beq.n	80008e8 <__swbuf_r+0x28>
 800094e:	f04f 37ff 	mov.w	r7, #4294967295
 8000952:	4638      	mov	r0, r7
 8000954:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000956:	bf00      	nop
 8000958:	080016c0 	.word	0x080016c0
 800095c:	080016e0 	.word	0x080016e0
 8000960:	080016a0 	.word	0x080016a0

08000964 <__swsetup_r>:
 8000964:	4b32      	ldr	r3, [pc, #200]	; (8000a30 <__swsetup_r+0xcc>)
 8000966:	b570      	push	{r4, r5, r6, lr}
 8000968:	681d      	ldr	r5, [r3, #0]
 800096a:	4606      	mov	r6, r0
 800096c:	460c      	mov	r4, r1
 800096e:	b125      	cbz	r5, 800097a <__swsetup_r+0x16>
 8000970:	69ab      	ldr	r3, [r5, #24]
 8000972:	b913      	cbnz	r3, 800097a <__swsetup_r+0x16>
 8000974:	4628      	mov	r0, r5
 8000976:	f000 f953 	bl	8000c20 <__sinit>
 800097a:	4b2e      	ldr	r3, [pc, #184]	; (8000a34 <__swsetup_r+0xd0>)
 800097c:	429c      	cmp	r4, r3
 800097e:	d10f      	bne.n	80009a0 <__swsetup_r+0x3c>
 8000980:	686c      	ldr	r4, [r5, #4]
 8000982:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000986:	b29a      	uxth	r2, r3
 8000988:	0715      	lsls	r5, r2, #28
 800098a:	d42c      	bmi.n	80009e6 <__swsetup_r+0x82>
 800098c:	06d0      	lsls	r0, r2, #27
 800098e:	d411      	bmi.n	80009b4 <__swsetup_r+0x50>
 8000990:	2209      	movs	r2, #9
 8000992:	6032      	str	r2, [r6, #0]
 8000994:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000998:	81a3      	strh	r3, [r4, #12]
 800099a:	f04f 30ff 	mov.w	r0, #4294967295
 800099e:	e03e      	b.n	8000a1e <__swsetup_r+0xba>
 80009a0:	4b25      	ldr	r3, [pc, #148]	; (8000a38 <__swsetup_r+0xd4>)
 80009a2:	429c      	cmp	r4, r3
 80009a4:	d101      	bne.n	80009aa <__swsetup_r+0x46>
 80009a6:	68ac      	ldr	r4, [r5, #8]
 80009a8:	e7eb      	b.n	8000982 <__swsetup_r+0x1e>
 80009aa:	4b24      	ldr	r3, [pc, #144]	; (8000a3c <__swsetup_r+0xd8>)
 80009ac:	429c      	cmp	r4, r3
 80009ae:	bf08      	it	eq
 80009b0:	68ec      	ldreq	r4, [r5, #12]
 80009b2:	e7e6      	b.n	8000982 <__swsetup_r+0x1e>
 80009b4:	0751      	lsls	r1, r2, #29
 80009b6:	d512      	bpl.n	80009de <__swsetup_r+0x7a>
 80009b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80009ba:	b141      	cbz	r1, 80009ce <__swsetup_r+0x6a>
 80009bc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80009c0:	4299      	cmp	r1, r3
 80009c2:	d002      	beq.n	80009ca <__swsetup_r+0x66>
 80009c4:	4630      	mov	r0, r6
 80009c6:	f000 fa19 	bl	8000dfc <_free_r>
 80009ca:	2300      	movs	r3, #0
 80009cc:	6363      	str	r3, [r4, #52]	; 0x34
 80009ce:	89a3      	ldrh	r3, [r4, #12]
 80009d0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80009d4:	81a3      	strh	r3, [r4, #12]
 80009d6:	2300      	movs	r3, #0
 80009d8:	6063      	str	r3, [r4, #4]
 80009da:	6923      	ldr	r3, [r4, #16]
 80009dc:	6023      	str	r3, [r4, #0]
 80009de:	89a3      	ldrh	r3, [r4, #12]
 80009e0:	f043 0308 	orr.w	r3, r3, #8
 80009e4:	81a3      	strh	r3, [r4, #12]
 80009e6:	6923      	ldr	r3, [r4, #16]
 80009e8:	b94b      	cbnz	r3, 80009fe <__swsetup_r+0x9a>
 80009ea:	89a3      	ldrh	r3, [r4, #12]
 80009ec:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80009f0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80009f4:	d003      	beq.n	80009fe <__swsetup_r+0x9a>
 80009f6:	4621      	mov	r1, r4
 80009f8:	4630      	mov	r0, r6
 80009fa:	f000 f9bf 	bl	8000d7c <__smakebuf_r>
 80009fe:	89a2      	ldrh	r2, [r4, #12]
 8000a00:	f012 0301 	ands.w	r3, r2, #1
 8000a04:	d00c      	beq.n	8000a20 <__swsetup_r+0xbc>
 8000a06:	2300      	movs	r3, #0
 8000a08:	60a3      	str	r3, [r4, #8]
 8000a0a:	6963      	ldr	r3, [r4, #20]
 8000a0c:	425b      	negs	r3, r3
 8000a0e:	61a3      	str	r3, [r4, #24]
 8000a10:	6923      	ldr	r3, [r4, #16]
 8000a12:	b953      	cbnz	r3, 8000a2a <__swsetup_r+0xc6>
 8000a14:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a18:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000a1c:	d1ba      	bne.n	8000994 <__swsetup_r+0x30>
 8000a1e:	bd70      	pop	{r4, r5, r6, pc}
 8000a20:	0792      	lsls	r2, r2, #30
 8000a22:	bf58      	it	pl
 8000a24:	6963      	ldrpl	r3, [r4, #20]
 8000a26:	60a3      	str	r3, [r4, #8]
 8000a28:	e7f2      	b.n	8000a10 <__swsetup_r+0xac>
 8000a2a:	2000      	movs	r0, #0
 8000a2c:	e7f7      	b.n	8000a1e <__swsetup_r+0xba>
 8000a2e:	bf00      	nop
 8000a30:	20000000 	.word	0x20000000
 8000a34:	080016c0 	.word	0x080016c0
 8000a38:	080016e0 	.word	0x080016e0
 8000a3c:	080016a0 	.word	0x080016a0

08000a40 <__sflush_r>:
 8000a40:	898a      	ldrh	r2, [r1, #12]
 8000a42:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a46:	4605      	mov	r5, r0
 8000a48:	0710      	lsls	r0, r2, #28
 8000a4a:	460c      	mov	r4, r1
 8000a4c:	d458      	bmi.n	8000b00 <__sflush_r+0xc0>
 8000a4e:	684b      	ldr	r3, [r1, #4]
 8000a50:	2b00      	cmp	r3, #0
 8000a52:	dc05      	bgt.n	8000a60 <__sflush_r+0x20>
 8000a54:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000a56:	2b00      	cmp	r3, #0
 8000a58:	dc02      	bgt.n	8000a60 <__sflush_r+0x20>
 8000a5a:	2000      	movs	r0, #0
 8000a5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a60:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000a62:	2e00      	cmp	r6, #0
 8000a64:	d0f9      	beq.n	8000a5a <__sflush_r+0x1a>
 8000a66:	2300      	movs	r3, #0
 8000a68:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000a6c:	682f      	ldr	r7, [r5, #0]
 8000a6e:	6a21      	ldr	r1, [r4, #32]
 8000a70:	602b      	str	r3, [r5, #0]
 8000a72:	d032      	beq.n	8000ada <__sflush_r+0x9a>
 8000a74:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000a76:	89a3      	ldrh	r3, [r4, #12]
 8000a78:	075a      	lsls	r2, r3, #29
 8000a7a:	d505      	bpl.n	8000a88 <__sflush_r+0x48>
 8000a7c:	6863      	ldr	r3, [r4, #4]
 8000a7e:	1ac0      	subs	r0, r0, r3
 8000a80:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000a82:	b10b      	cbz	r3, 8000a88 <__sflush_r+0x48>
 8000a84:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000a86:	1ac0      	subs	r0, r0, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	4602      	mov	r2, r0
 8000a8c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000a8e:	6a21      	ldr	r1, [r4, #32]
 8000a90:	4628      	mov	r0, r5
 8000a92:	47b0      	blx	r6
 8000a94:	1c43      	adds	r3, r0, #1
 8000a96:	89a3      	ldrh	r3, [r4, #12]
 8000a98:	d106      	bne.n	8000aa8 <__sflush_r+0x68>
 8000a9a:	6829      	ldr	r1, [r5, #0]
 8000a9c:	291d      	cmp	r1, #29
 8000a9e:	d848      	bhi.n	8000b32 <__sflush_r+0xf2>
 8000aa0:	4a29      	ldr	r2, [pc, #164]	; (8000b48 <__sflush_r+0x108>)
 8000aa2:	40ca      	lsrs	r2, r1
 8000aa4:	07d6      	lsls	r6, r2, #31
 8000aa6:	d544      	bpl.n	8000b32 <__sflush_r+0xf2>
 8000aa8:	2200      	movs	r2, #0
 8000aaa:	6062      	str	r2, [r4, #4]
 8000aac:	04d9      	lsls	r1, r3, #19
 8000aae:	6922      	ldr	r2, [r4, #16]
 8000ab0:	6022      	str	r2, [r4, #0]
 8000ab2:	d504      	bpl.n	8000abe <__sflush_r+0x7e>
 8000ab4:	1c42      	adds	r2, r0, #1
 8000ab6:	d101      	bne.n	8000abc <__sflush_r+0x7c>
 8000ab8:	682b      	ldr	r3, [r5, #0]
 8000aba:	b903      	cbnz	r3, 8000abe <__sflush_r+0x7e>
 8000abc:	6560      	str	r0, [r4, #84]	; 0x54
 8000abe:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000ac0:	602f      	str	r7, [r5, #0]
 8000ac2:	2900      	cmp	r1, #0
 8000ac4:	d0c9      	beq.n	8000a5a <__sflush_r+0x1a>
 8000ac6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000aca:	4299      	cmp	r1, r3
 8000acc:	d002      	beq.n	8000ad4 <__sflush_r+0x94>
 8000ace:	4628      	mov	r0, r5
 8000ad0:	f000 f994 	bl	8000dfc <_free_r>
 8000ad4:	2000      	movs	r0, #0
 8000ad6:	6360      	str	r0, [r4, #52]	; 0x34
 8000ad8:	e7c0      	b.n	8000a5c <__sflush_r+0x1c>
 8000ada:	2301      	movs	r3, #1
 8000adc:	4628      	mov	r0, r5
 8000ade:	47b0      	blx	r6
 8000ae0:	1c41      	adds	r1, r0, #1
 8000ae2:	d1c8      	bne.n	8000a76 <__sflush_r+0x36>
 8000ae4:	682b      	ldr	r3, [r5, #0]
 8000ae6:	2b00      	cmp	r3, #0
 8000ae8:	d0c5      	beq.n	8000a76 <__sflush_r+0x36>
 8000aea:	2b1d      	cmp	r3, #29
 8000aec:	d001      	beq.n	8000af2 <__sflush_r+0xb2>
 8000aee:	2b16      	cmp	r3, #22
 8000af0:	d101      	bne.n	8000af6 <__sflush_r+0xb6>
 8000af2:	602f      	str	r7, [r5, #0]
 8000af4:	e7b1      	b.n	8000a5a <__sflush_r+0x1a>
 8000af6:	89a3      	ldrh	r3, [r4, #12]
 8000af8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000afc:	81a3      	strh	r3, [r4, #12]
 8000afe:	e7ad      	b.n	8000a5c <__sflush_r+0x1c>
 8000b00:	690f      	ldr	r7, [r1, #16]
 8000b02:	2f00      	cmp	r7, #0
 8000b04:	d0a9      	beq.n	8000a5a <__sflush_r+0x1a>
 8000b06:	0793      	lsls	r3, r2, #30
 8000b08:	680e      	ldr	r6, [r1, #0]
 8000b0a:	bf08      	it	eq
 8000b0c:	694b      	ldreq	r3, [r1, #20]
 8000b0e:	600f      	str	r7, [r1, #0]
 8000b10:	bf18      	it	ne
 8000b12:	2300      	movne	r3, #0
 8000b14:	eba6 0807 	sub.w	r8, r6, r7
 8000b18:	608b      	str	r3, [r1, #8]
 8000b1a:	f1b8 0f00 	cmp.w	r8, #0
 8000b1e:	dd9c      	ble.n	8000a5a <__sflush_r+0x1a>
 8000b20:	4643      	mov	r3, r8
 8000b22:	463a      	mov	r2, r7
 8000b24:	6a21      	ldr	r1, [r4, #32]
 8000b26:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000b28:	4628      	mov	r0, r5
 8000b2a:	47b0      	blx	r6
 8000b2c:	2800      	cmp	r0, #0
 8000b2e:	dc06      	bgt.n	8000b3e <__sflush_r+0xfe>
 8000b30:	89a3      	ldrh	r3, [r4, #12]
 8000b32:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000b36:	81a3      	strh	r3, [r4, #12]
 8000b38:	f04f 30ff 	mov.w	r0, #4294967295
 8000b3c:	e78e      	b.n	8000a5c <__sflush_r+0x1c>
 8000b3e:	4407      	add	r7, r0
 8000b40:	eba8 0800 	sub.w	r8, r8, r0
 8000b44:	e7e9      	b.n	8000b1a <__sflush_r+0xda>
 8000b46:	bf00      	nop
 8000b48:	20400001 	.word	0x20400001

08000b4c <_fflush_r>:
 8000b4c:	b538      	push	{r3, r4, r5, lr}
 8000b4e:	690b      	ldr	r3, [r1, #16]
 8000b50:	4605      	mov	r5, r0
 8000b52:	460c      	mov	r4, r1
 8000b54:	b1db      	cbz	r3, 8000b8e <_fflush_r+0x42>
 8000b56:	b118      	cbz	r0, 8000b60 <_fflush_r+0x14>
 8000b58:	6983      	ldr	r3, [r0, #24]
 8000b5a:	b90b      	cbnz	r3, 8000b60 <_fflush_r+0x14>
 8000b5c:	f000 f860 	bl	8000c20 <__sinit>
 8000b60:	4b0c      	ldr	r3, [pc, #48]	; (8000b94 <_fflush_r+0x48>)
 8000b62:	429c      	cmp	r4, r3
 8000b64:	d109      	bne.n	8000b7a <_fflush_r+0x2e>
 8000b66:	686c      	ldr	r4, [r5, #4]
 8000b68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b6c:	b17b      	cbz	r3, 8000b8e <_fflush_r+0x42>
 8000b6e:	4621      	mov	r1, r4
 8000b70:	4628      	mov	r0, r5
 8000b72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b76:	f7ff bf63 	b.w	8000a40 <__sflush_r>
 8000b7a:	4b07      	ldr	r3, [pc, #28]	; (8000b98 <_fflush_r+0x4c>)
 8000b7c:	429c      	cmp	r4, r3
 8000b7e:	d101      	bne.n	8000b84 <_fflush_r+0x38>
 8000b80:	68ac      	ldr	r4, [r5, #8]
 8000b82:	e7f1      	b.n	8000b68 <_fflush_r+0x1c>
 8000b84:	4b05      	ldr	r3, [pc, #20]	; (8000b9c <_fflush_r+0x50>)
 8000b86:	429c      	cmp	r4, r3
 8000b88:	bf08      	it	eq
 8000b8a:	68ec      	ldreq	r4, [r5, #12]
 8000b8c:	e7ec      	b.n	8000b68 <_fflush_r+0x1c>
 8000b8e:	2000      	movs	r0, #0
 8000b90:	bd38      	pop	{r3, r4, r5, pc}
 8000b92:	bf00      	nop
 8000b94:	080016c0 	.word	0x080016c0
 8000b98:	080016e0 	.word	0x080016e0
 8000b9c:	080016a0 	.word	0x080016a0

08000ba0 <std>:
 8000ba0:	2300      	movs	r3, #0
 8000ba2:	b510      	push	{r4, lr}
 8000ba4:	4604      	mov	r4, r0
 8000ba6:	e9c0 3300 	strd	r3, r3, [r0]
 8000baa:	6083      	str	r3, [r0, #8]
 8000bac:	8181      	strh	r1, [r0, #12]
 8000bae:	6643      	str	r3, [r0, #100]	; 0x64
 8000bb0:	81c2      	strh	r2, [r0, #14]
 8000bb2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000bb6:	6183      	str	r3, [r0, #24]
 8000bb8:	4619      	mov	r1, r3
 8000bba:	2208      	movs	r2, #8
 8000bbc:	305c      	adds	r0, #92	; 0x5c
 8000bbe:	f7ff fdfb 	bl	80007b8 <memset>
 8000bc2:	4b05      	ldr	r3, [pc, #20]	; (8000bd8 <std+0x38>)
 8000bc4:	6263      	str	r3, [r4, #36]	; 0x24
 8000bc6:	4b05      	ldr	r3, [pc, #20]	; (8000bdc <std+0x3c>)
 8000bc8:	62a3      	str	r3, [r4, #40]	; 0x28
 8000bca:	4b05      	ldr	r3, [pc, #20]	; (8000be0 <std+0x40>)
 8000bcc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000bce:	4b05      	ldr	r3, [pc, #20]	; (8000be4 <std+0x44>)
 8000bd0:	6224      	str	r4, [r4, #32]
 8000bd2:	6323      	str	r3, [r4, #48]	; 0x30
 8000bd4:	bd10      	pop	{r4, pc}
 8000bd6:	bf00      	nop
 8000bd8:	080014fd 	.word	0x080014fd
 8000bdc:	0800151f 	.word	0x0800151f
 8000be0:	08001557 	.word	0x08001557
 8000be4:	0800157b 	.word	0x0800157b

08000be8 <_cleanup_r>:
 8000be8:	4901      	ldr	r1, [pc, #4]	; (8000bf0 <_cleanup_r+0x8>)
 8000bea:	f000 b885 	b.w	8000cf8 <_fwalk_reent>
 8000bee:	bf00      	nop
 8000bf0:	08000b4d 	.word	0x08000b4d

08000bf4 <__sfmoreglue>:
 8000bf4:	b570      	push	{r4, r5, r6, lr}
 8000bf6:	1e4a      	subs	r2, r1, #1
 8000bf8:	2568      	movs	r5, #104	; 0x68
 8000bfa:	4355      	muls	r5, r2
 8000bfc:	460e      	mov	r6, r1
 8000bfe:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000c02:	f000 f949 	bl	8000e98 <_malloc_r>
 8000c06:	4604      	mov	r4, r0
 8000c08:	b140      	cbz	r0, 8000c1c <__sfmoreglue+0x28>
 8000c0a:	2100      	movs	r1, #0
 8000c0c:	e9c0 1600 	strd	r1, r6, [r0]
 8000c10:	300c      	adds	r0, #12
 8000c12:	60a0      	str	r0, [r4, #8]
 8000c14:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000c18:	f7ff fdce 	bl	80007b8 <memset>
 8000c1c:	4620      	mov	r0, r4
 8000c1e:	bd70      	pop	{r4, r5, r6, pc}

08000c20 <__sinit>:
 8000c20:	6983      	ldr	r3, [r0, #24]
 8000c22:	b510      	push	{r4, lr}
 8000c24:	4604      	mov	r4, r0
 8000c26:	bb33      	cbnz	r3, 8000c76 <__sinit+0x56>
 8000c28:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000c2c:	6503      	str	r3, [r0, #80]	; 0x50
 8000c2e:	4b12      	ldr	r3, [pc, #72]	; (8000c78 <__sinit+0x58>)
 8000c30:	4a12      	ldr	r2, [pc, #72]	; (8000c7c <__sinit+0x5c>)
 8000c32:	681b      	ldr	r3, [r3, #0]
 8000c34:	6282      	str	r2, [r0, #40]	; 0x28
 8000c36:	4298      	cmp	r0, r3
 8000c38:	bf04      	itt	eq
 8000c3a:	2301      	moveq	r3, #1
 8000c3c:	6183      	streq	r3, [r0, #24]
 8000c3e:	f000 f81f 	bl	8000c80 <__sfp>
 8000c42:	6060      	str	r0, [r4, #4]
 8000c44:	4620      	mov	r0, r4
 8000c46:	f000 f81b 	bl	8000c80 <__sfp>
 8000c4a:	60a0      	str	r0, [r4, #8]
 8000c4c:	4620      	mov	r0, r4
 8000c4e:	f000 f817 	bl	8000c80 <__sfp>
 8000c52:	2200      	movs	r2, #0
 8000c54:	60e0      	str	r0, [r4, #12]
 8000c56:	2104      	movs	r1, #4
 8000c58:	6860      	ldr	r0, [r4, #4]
 8000c5a:	f7ff ffa1 	bl	8000ba0 <std>
 8000c5e:	2201      	movs	r2, #1
 8000c60:	2109      	movs	r1, #9
 8000c62:	68a0      	ldr	r0, [r4, #8]
 8000c64:	f7ff ff9c 	bl	8000ba0 <std>
 8000c68:	2202      	movs	r2, #2
 8000c6a:	2112      	movs	r1, #18
 8000c6c:	68e0      	ldr	r0, [r4, #12]
 8000c6e:	f7ff ff97 	bl	8000ba0 <std>
 8000c72:	2301      	movs	r3, #1
 8000c74:	61a3      	str	r3, [r4, #24]
 8000c76:	bd10      	pop	{r4, pc}
 8000c78:	0800169c 	.word	0x0800169c
 8000c7c:	08000be9 	.word	0x08000be9

08000c80 <__sfp>:
 8000c80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c82:	4b1b      	ldr	r3, [pc, #108]	; (8000cf0 <__sfp+0x70>)
 8000c84:	681e      	ldr	r6, [r3, #0]
 8000c86:	69b3      	ldr	r3, [r6, #24]
 8000c88:	4607      	mov	r7, r0
 8000c8a:	b913      	cbnz	r3, 8000c92 <__sfp+0x12>
 8000c8c:	4630      	mov	r0, r6
 8000c8e:	f7ff ffc7 	bl	8000c20 <__sinit>
 8000c92:	3648      	adds	r6, #72	; 0x48
 8000c94:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000c98:	3b01      	subs	r3, #1
 8000c9a:	d503      	bpl.n	8000ca4 <__sfp+0x24>
 8000c9c:	6833      	ldr	r3, [r6, #0]
 8000c9e:	b133      	cbz	r3, 8000cae <__sfp+0x2e>
 8000ca0:	6836      	ldr	r6, [r6, #0]
 8000ca2:	e7f7      	b.n	8000c94 <__sfp+0x14>
 8000ca4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000ca8:	b16d      	cbz	r5, 8000cc6 <__sfp+0x46>
 8000caa:	3468      	adds	r4, #104	; 0x68
 8000cac:	e7f4      	b.n	8000c98 <__sfp+0x18>
 8000cae:	2104      	movs	r1, #4
 8000cb0:	4638      	mov	r0, r7
 8000cb2:	f7ff ff9f 	bl	8000bf4 <__sfmoreglue>
 8000cb6:	6030      	str	r0, [r6, #0]
 8000cb8:	2800      	cmp	r0, #0
 8000cba:	d1f1      	bne.n	8000ca0 <__sfp+0x20>
 8000cbc:	230c      	movs	r3, #12
 8000cbe:	603b      	str	r3, [r7, #0]
 8000cc0:	4604      	mov	r4, r0
 8000cc2:	4620      	mov	r0, r4
 8000cc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000cc6:	4b0b      	ldr	r3, [pc, #44]	; (8000cf4 <__sfp+0x74>)
 8000cc8:	6665      	str	r5, [r4, #100]	; 0x64
 8000cca:	e9c4 5500 	strd	r5, r5, [r4]
 8000cce:	60a5      	str	r5, [r4, #8]
 8000cd0:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000cd4:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000cd8:	2208      	movs	r2, #8
 8000cda:	4629      	mov	r1, r5
 8000cdc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000ce0:	f7ff fd6a 	bl	80007b8 <memset>
 8000ce4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000ce8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000cec:	e7e9      	b.n	8000cc2 <__sfp+0x42>
 8000cee:	bf00      	nop
 8000cf0:	0800169c 	.word	0x0800169c
 8000cf4:	ffff0001 	.word	0xffff0001

08000cf8 <_fwalk_reent>:
 8000cf8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000cfc:	4680      	mov	r8, r0
 8000cfe:	4689      	mov	r9, r1
 8000d00:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000d04:	2600      	movs	r6, #0
 8000d06:	b914      	cbnz	r4, 8000d0e <_fwalk_reent+0x16>
 8000d08:	4630      	mov	r0, r6
 8000d0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000d0e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000d12:	3f01      	subs	r7, #1
 8000d14:	d501      	bpl.n	8000d1a <_fwalk_reent+0x22>
 8000d16:	6824      	ldr	r4, [r4, #0]
 8000d18:	e7f5      	b.n	8000d06 <_fwalk_reent+0xe>
 8000d1a:	89ab      	ldrh	r3, [r5, #12]
 8000d1c:	2b01      	cmp	r3, #1
 8000d1e:	d907      	bls.n	8000d30 <_fwalk_reent+0x38>
 8000d20:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000d24:	3301      	adds	r3, #1
 8000d26:	d003      	beq.n	8000d30 <_fwalk_reent+0x38>
 8000d28:	4629      	mov	r1, r5
 8000d2a:	4640      	mov	r0, r8
 8000d2c:	47c8      	blx	r9
 8000d2e:	4306      	orrs	r6, r0
 8000d30:	3568      	adds	r5, #104	; 0x68
 8000d32:	e7ee      	b.n	8000d12 <_fwalk_reent+0x1a>

08000d34 <__swhatbuf_r>:
 8000d34:	b570      	push	{r4, r5, r6, lr}
 8000d36:	460e      	mov	r6, r1
 8000d38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d3c:	2900      	cmp	r1, #0
 8000d3e:	b096      	sub	sp, #88	; 0x58
 8000d40:	4614      	mov	r4, r2
 8000d42:	461d      	mov	r5, r3
 8000d44:	da07      	bge.n	8000d56 <__swhatbuf_r+0x22>
 8000d46:	2300      	movs	r3, #0
 8000d48:	602b      	str	r3, [r5, #0]
 8000d4a:	89b3      	ldrh	r3, [r6, #12]
 8000d4c:	061a      	lsls	r2, r3, #24
 8000d4e:	d410      	bmi.n	8000d72 <__swhatbuf_r+0x3e>
 8000d50:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000d54:	e00e      	b.n	8000d74 <__swhatbuf_r+0x40>
 8000d56:	466a      	mov	r2, sp
 8000d58:	f000 fc36 	bl	80015c8 <_fstat_r>
 8000d5c:	2800      	cmp	r0, #0
 8000d5e:	dbf2      	blt.n	8000d46 <__swhatbuf_r+0x12>
 8000d60:	9a01      	ldr	r2, [sp, #4]
 8000d62:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000d66:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000d6a:	425a      	negs	r2, r3
 8000d6c:	415a      	adcs	r2, r3
 8000d6e:	602a      	str	r2, [r5, #0]
 8000d70:	e7ee      	b.n	8000d50 <__swhatbuf_r+0x1c>
 8000d72:	2340      	movs	r3, #64	; 0x40
 8000d74:	2000      	movs	r0, #0
 8000d76:	6023      	str	r3, [r4, #0]
 8000d78:	b016      	add	sp, #88	; 0x58
 8000d7a:	bd70      	pop	{r4, r5, r6, pc}

08000d7c <__smakebuf_r>:
 8000d7c:	898b      	ldrh	r3, [r1, #12]
 8000d7e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000d80:	079d      	lsls	r5, r3, #30
 8000d82:	4606      	mov	r6, r0
 8000d84:	460c      	mov	r4, r1
 8000d86:	d507      	bpl.n	8000d98 <__smakebuf_r+0x1c>
 8000d88:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000d8c:	6023      	str	r3, [r4, #0]
 8000d8e:	6123      	str	r3, [r4, #16]
 8000d90:	2301      	movs	r3, #1
 8000d92:	6163      	str	r3, [r4, #20]
 8000d94:	b002      	add	sp, #8
 8000d96:	bd70      	pop	{r4, r5, r6, pc}
 8000d98:	ab01      	add	r3, sp, #4
 8000d9a:	466a      	mov	r2, sp
 8000d9c:	f7ff ffca 	bl	8000d34 <__swhatbuf_r>
 8000da0:	9900      	ldr	r1, [sp, #0]
 8000da2:	4605      	mov	r5, r0
 8000da4:	4630      	mov	r0, r6
 8000da6:	f000 f877 	bl	8000e98 <_malloc_r>
 8000daa:	b948      	cbnz	r0, 8000dc0 <__smakebuf_r+0x44>
 8000dac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000db0:	059a      	lsls	r2, r3, #22
 8000db2:	d4ef      	bmi.n	8000d94 <__smakebuf_r+0x18>
 8000db4:	f023 0303 	bic.w	r3, r3, #3
 8000db8:	f043 0302 	orr.w	r3, r3, #2
 8000dbc:	81a3      	strh	r3, [r4, #12]
 8000dbe:	e7e3      	b.n	8000d88 <__smakebuf_r+0xc>
 8000dc0:	4b0d      	ldr	r3, [pc, #52]	; (8000df8 <__smakebuf_r+0x7c>)
 8000dc2:	62b3      	str	r3, [r6, #40]	; 0x28
 8000dc4:	89a3      	ldrh	r3, [r4, #12]
 8000dc6:	6020      	str	r0, [r4, #0]
 8000dc8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000dcc:	81a3      	strh	r3, [r4, #12]
 8000dce:	9b00      	ldr	r3, [sp, #0]
 8000dd0:	6163      	str	r3, [r4, #20]
 8000dd2:	9b01      	ldr	r3, [sp, #4]
 8000dd4:	6120      	str	r0, [r4, #16]
 8000dd6:	b15b      	cbz	r3, 8000df0 <__smakebuf_r+0x74>
 8000dd8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ddc:	4630      	mov	r0, r6
 8000dde:	f000 fc05 	bl	80015ec <_isatty_r>
 8000de2:	b128      	cbz	r0, 8000df0 <__smakebuf_r+0x74>
 8000de4:	89a3      	ldrh	r3, [r4, #12]
 8000de6:	f023 0303 	bic.w	r3, r3, #3
 8000dea:	f043 0301 	orr.w	r3, r3, #1
 8000dee:	81a3      	strh	r3, [r4, #12]
 8000df0:	89a3      	ldrh	r3, [r4, #12]
 8000df2:	431d      	orrs	r5, r3
 8000df4:	81a5      	strh	r5, [r4, #12]
 8000df6:	e7cd      	b.n	8000d94 <__smakebuf_r+0x18>
 8000df8:	08000be9 	.word	0x08000be9

08000dfc <_free_r>:
 8000dfc:	b538      	push	{r3, r4, r5, lr}
 8000dfe:	4605      	mov	r5, r0
 8000e00:	2900      	cmp	r1, #0
 8000e02:	d045      	beq.n	8000e90 <_free_r+0x94>
 8000e04:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000e08:	1f0c      	subs	r4, r1, #4
 8000e0a:	2b00      	cmp	r3, #0
 8000e0c:	bfb8      	it	lt
 8000e0e:	18e4      	addlt	r4, r4, r3
 8000e10:	f000 fc0e 	bl	8001630 <__malloc_lock>
 8000e14:	4a1f      	ldr	r2, [pc, #124]	; (8000e94 <_free_r+0x98>)
 8000e16:	6813      	ldr	r3, [r2, #0]
 8000e18:	4610      	mov	r0, r2
 8000e1a:	b933      	cbnz	r3, 8000e2a <_free_r+0x2e>
 8000e1c:	6063      	str	r3, [r4, #4]
 8000e1e:	6014      	str	r4, [r2, #0]
 8000e20:	4628      	mov	r0, r5
 8000e22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000e26:	f000 bc04 	b.w	8001632 <__malloc_unlock>
 8000e2a:	42a3      	cmp	r3, r4
 8000e2c:	d90c      	bls.n	8000e48 <_free_r+0x4c>
 8000e2e:	6821      	ldr	r1, [r4, #0]
 8000e30:	1862      	adds	r2, r4, r1
 8000e32:	4293      	cmp	r3, r2
 8000e34:	bf04      	itt	eq
 8000e36:	681a      	ldreq	r2, [r3, #0]
 8000e38:	685b      	ldreq	r3, [r3, #4]
 8000e3a:	6063      	str	r3, [r4, #4]
 8000e3c:	bf04      	itt	eq
 8000e3e:	1852      	addeq	r2, r2, r1
 8000e40:	6022      	streq	r2, [r4, #0]
 8000e42:	6004      	str	r4, [r0, #0]
 8000e44:	e7ec      	b.n	8000e20 <_free_r+0x24>
 8000e46:	4613      	mov	r3, r2
 8000e48:	685a      	ldr	r2, [r3, #4]
 8000e4a:	b10a      	cbz	r2, 8000e50 <_free_r+0x54>
 8000e4c:	42a2      	cmp	r2, r4
 8000e4e:	d9fa      	bls.n	8000e46 <_free_r+0x4a>
 8000e50:	6819      	ldr	r1, [r3, #0]
 8000e52:	1858      	adds	r0, r3, r1
 8000e54:	42a0      	cmp	r0, r4
 8000e56:	d10b      	bne.n	8000e70 <_free_r+0x74>
 8000e58:	6820      	ldr	r0, [r4, #0]
 8000e5a:	4401      	add	r1, r0
 8000e5c:	1858      	adds	r0, r3, r1
 8000e5e:	4282      	cmp	r2, r0
 8000e60:	6019      	str	r1, [r3, #0]
 8000e62:	d1dd      	bne.n	8000e20 <_free_r+0x24>
 8000e64:	6810      	ldr	r0, [r2, #0]
 8000e66:	6852      	ldr	r2, [r2, #4]
 8000e68:	605a      	str	r2, [r3, #4]
 8000e6a:	4401      	add	r1, r0
 8000e6c:	6019      	str	r1, [r3, #0]
 8000e6e:	e7d7      	b.n	8000e20 <_free_r+0x24>
 8000e70:	d902      	bls.n	8000e78 <_free_r+0x7c>
 8000e72:	230c      	movs	r3, #12
 8000e74:	602b      	str	r3, [r5, #0]
 8000e76:	e7d3      	b.n	8000e20 <_free_r+0x24>
 8000e78:	6820      	ldr	r0, [r4, #0]
 8000e7a:	1821      	adds	r1, r4, r0
 8000e7c:	428a      	cmp	r2, r1
 8000e7e:	bf04      	itt	eq
 8000e80:	6811      	ldreq	r1, [r2, #0]
 8000e82:	6852      	ldreq	r2, [r2, #4]
 8000e84:	6062      	str	r2, [r4, #4]
 8000e86:	bf04      	itt	eq
 8000e88:	1809      	addeq	r1, r1, r0
 8000e8a:	6021      	streq	r1, [r4, #0]
 8000e8c:	605c      	str	r4, [r3, #4]
 8000e8e:	e7c7      	b.n	8000e20 <_free_r+0x24>
 8000e90:	bd38      	pop	{r3, r4, r5, pc}
 8000e92:	bf00      	nop
 8000e94:	20000088 	.word	0x20000088

08000e98 <_malloc_r>:
 8000e98:	b570      	push	{r4, r5, r6, lr}
 8000e9a:	1ccd      	adds	r5, r1, #3
 8000e9c:	f025 0503 	bic.w	r5, r5, #3
 8000ea0:	3508      	adds	r5, #8
 8000ea2:	2d0c      	cmp	r5, #12
 8000ea4:	bf38      	it	cc
 8000ea6:	250c      	movcc	r5, #12
 8000ea8:	2d00      	cmp	r5, #0
 8000eaa:	4606      	mov	r6, r0
 8000eac:	db01      	blt.n	8000eb2 <_malloc_r+0x1a>
 8000eae:	42a9      	cmp	r1, r5
 8000eb0:	d903      	bls.n	8000eba <_malloc_r+0x22>
 8000eb2:	230c      	movs	r3, #12
 8000eb4:	6033      	str	r3, [r6, #0]
 8000eb6:	2000      	movs	r0, #0
 8000eb8:	bd70      	pop	{r4, r5, r6, pc}
 8000eba:	f000 fbb9 	bl	8001630 <__malloc_lock>
 8000ebe:	4a21      	ldr	r2, [pc, #132]	; (8000f44 <_malloc_r+0xac>)
 8000ec0:	6814      	ldr	r4, [r2, #0]
 8000ec2:	4621      	mov	r1, r4
 8000ec4:	b991      	cbnz	r1, 8000eec <_malloc_r+0x54>
 8000ec6:	4c20      	ldr	r4, [pc, #128]	; (8000f48 <_malloc_r+0xb0>)
 8000ec8:	6823      	ldr	r3, [r4, #0]
 8000eca:	b91b      	cbnz	r3, 8000ed4 <_malloc_r+0x3c>
 8000ecc:	4630      	mov	r0, r6
 8000ece:	f000 fb05 	bl	80014dc <_sbrk_r>
 8000ed2:	6020      	str	r0, [r4, #0]
 8000ed4:	4629      	mov	r1, r5
 8000ed6:	4630      	mov	r0, r6
 8000ed8:	f000 fb00 	bl	80014dc <_sbrk_r>
 8000edc:	1c43      	adds	r3, r0, #1
 8000ede:	d124      	bne.n	8000f2a <_malloc_r+0x92>
 8000ee0:	230c      	movs	r3, #12
 8000ee2:	6033      	str	r3, [r6, #0]
 8000ee4:	4630      	mov	r0, r6
 8000ee6:	f000 fba4 	bl	8001632 <__malloc_unlock>
 8000eea:	e7e4      	b.n	8000eb6 <_malloc_r+0x1e>
 8000eec:	680b      	ldr	r3, [r1, #0]
 8000eee:	1b5b      	subs	r3, r3, r5
 8000ef0:	d418      	bmi.n	8000f24 <_malloc_r+0x8c>
 8000ef2:	2b0b      	cmp	r3, #11
 8000ef4:	d90f      	bls.n	8000f16 <_malloc_r+0x7e>
 8000ef6:	600b      	str	r3, [r1, #0]
 8000ef8:	50cd      	str	r5, [r1, r3]
 8000efa:	18cc      	adds	r4, r1, r3
 8000efc:	4630      	mov	r0, r6
 8000efe:	f000 fb98 	bl	8001632 <__malloc_unlock>
 8000f02:	f104 000b 	add.w	r0, r4, #11
 8000f06:	1d23      	adds	r3, r4, #4
 8000f08:	f020 0007 	bic.w	r0, r0, #7
 8000f0c:	1ac3      	subs	r3, r0, r3
 8000f0e:	d0d3      	beq.n	8000eb8 <_malloc_r+0x20>
 8000f10:	425a      	negs	r2, r3
 8000f12:	50e2      	str	r2, [r4, r3]
 8000f14:	e7d0      	b.n	8000eb8 <_malloc_r+0x20>
 8000f16:	428c      	cmp	r4, r1
 8000f18:	684b      	ldr	r3, [r1, #4]
 8000f1a:	bf16      	itet	ne
 8000f1c:	6063      	strne	r3, [r4, #4]
 8000f1e:	6013      	streq	r3, [r2, #0]
 8000f20:	460c      	movne	r4, r1
 8000f22:	e7eb      	b.n	8000efc <_malloc_r+0x64>
 8000f24:	460c      	mov	r4, r1
 8000f26:	6849      	ldr	r1, [r1, #4]
 8000f28:	e7cc      	b.n	8000ec4 <_malloc_r+0x2c>
 8000f2a:	1cc4      	adds	r4, r0, #3
 8000f2c:	f024 0403 	bic.w	r4, r4, #3
 8000f30:	42a0      	cmp	r0, r4
 8000f32:	d005      	beq.n	8000f40 <_malloc_r+0xa8>
 8000f34:	1a21      	subs	r1, r4, r0
 8000f36:	4630      	mov	r0, r6
 8000f38:	f000 fad0 	bl	80014dc <_sbrk_r>
 8000f3c:	3001      	adds	r0, #1
 8000f3e:	d0cf      	beq.n	8000ee0 <_malloc_r+0x48>
 8000f40:	6025      	str	r5, [r4, #0]
 8000f42:	e7db      	b.n	8000efc <_malloc_r+0x64>
 8000f44:	20000088 	.word	0x20000088
 8000f48:	2000008c 	.word	0x2000008c

08000f4c <__sfputc_r>:
 8000f4c:	6893      	ldr	r3, [r2, #8]
 8000f4e:	3b01      	subs	r3, #1
 8000f50:	2b00      	cmp	r3, #0
 8000f52:	b410      	push	{r4}
 8000f54:	6093      	str	r3, [r2, #8]
 8000f56:	da08      	bge.n	8000f6a <__sfputc_r+0x1e>
 8000f58:	6994      	ldr	r4, [r2, #24]
 8000f5a:	42a3      	cmp	r3, r4
 8000f5c:	db01      	blt.n	8000f62 <__sfputc_r+0x16>
 8000f5e:	290a      	cmp	r1, #10
 8000f60:	d103      	bne.n	8000f6a <__sfputc_r+0x1e>
 8000f62:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f66:	f7ff bcab 	b.w	80008c0 <__swbuf_r>
 8000f6a:	6813      	ldr	r3, [r2, #0]
 8000f6c:	1c58      	adds	r0, r3, #1
 8000f6e:	6010      	str	r0, [r2, #0]
 8000f70:	7019      	strb	r1, [r3, #0]
 8000f72:	4608      	mov	r0, r1
 8000f74:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f78:	4770      	bx	lr

08000f7a <__sfputs_r>:
 8000f7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f7c:	4606      	mov	r6, r0
 8000f7e:	460f      	mov	r7, r1
 8000f80:	4614      	mov	r4, r2
 8000f82:	18d5      	adds	r5, r2, r3
 8000f84:	42ac      	cmp	r4, r5
 8000f86:	d101      	bne.n	8000f8c <__sfputs_r+0x12>
 8000f88:	2000      	movs	r0, #0
 8000f8a:	e007      	b.n	8000f9c <__sfputs_r+0x22>
 8000f8c:	463a      	mov	r2, r7
 8000f8e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f92:	4630      	mov	r0, r6
 8000f94:	f7ff ffda 	bl	8000f4c <__sfputc_r>
 8000f98:	1c43      	adds	r3, r0, #1
 8000f9a:	d1f3      	bne.n	8000f84 <__sfputs_r+0xa>
 8000f9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000fa0 <_vfiprintf_r>:
 8000fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000fa4:	460c      	mov	r4, r1
 8000fa6:	b09d      	sub	sp, #116	; 0x74
 8000fa8:	4617      	mov	r7, r2
 8000faa:	461d      	mov	r5, r3
 8000fac:	4606      	mov	r6, r0
 8000fae:	b118      	cbz	r0, 8000fb8 <_vfiprintf_r+0x18>
 8000fb0:	6983      	ldr	r3, [r0, #24]
 8000fb2:	b90b      	cbnz	r3, 8000fb8 <_vfiprintf_r+0x18>
 8000fb4:	f7ff fe34 	bl	8000c20 <__sinit>
 8000fb8:	4b7c      	ldr	r3, [pc, #496]	; (80011ac <_vfiprintf_r+0x20c>)
 8000fba:	429c      	cmp	r4, r3
 8000fbc:	d158      	bne.n	8001070 <_vfiprintf_r+0xd0>
 8000fbe:	6874      	ldr	r4, [r6, #4]
 8000fc0:	89a3      	ldrh	r3, [r4, #12]
 8000fc2:	0718      	lsls	r0, r3, #28
 8000fc4:	d55e      	bpl.n	8001084 <_vfiprintf_r+0xe4>
 8000fc6:	6923      	ldr	r3, [r4, #16]
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d05b      	beq.n	8001084 <_vfiprintf_r+0xe4>
 8000fcc:	2300      	movs	r3, #0
 8000fce:	9309      	str	r3, [sp, #36]	; 0x24
 8000fd0:	2320      	movs	r3, #32
 8000fd2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000fd6:	2330      	movs	r3, #48	; 0x30
 8000fd8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000fdc:	9503      	str	r5, [sp, #12]
 8000fde:	f04f 0b01 	mov.w	fp, #1
 8000fe2:	46b8      	mov	r8, r7
 8000fe4:	4645      	mov	r5, r8
 8000fe6:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000fea:	b10b      	cbz	r3, 8000ff0 <_vfiprintf_r+0x50>
 8000fec:	2b25      	cmp	r3, #37	; 0x25
 8000fee:	d154      	bne.n	800109a <_vfiprintf_r+0xfa>
 8000ff0:	ebb8 0a07 	subs.w	sl, r8, r7
 8000ff4:	d00b      	beq.n	800100e <_vfiprintf_r+0x6e>
 8000ff6:	4653      	mov	r3, sl
 8000ff8:	463a      	mov	r2, r7
 8000ffa:	4621      	mov	r1, r4
 8000ffc:	4630      	mov	r0, r6
 8000ffe:	f7ff ffbc 	bl	8000f7a <__sfputs_r>
 8001002:	3001      	adds	r0, #1
 8001004:	f000 80c2 	beq.w	800118c <_vfiprintf_r+0x1ec>
 8001008:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800100a:	4453      	add	r3, sl
 800100c:	9309      	str	r3, [sp, #36]	; 0x24
 800100e:	f898 3000 	ldrb.w	r3, [r8]
 8001012:	2b00      	cmp	r3, #0
 8001014:	f000 80ba 	beq.w	800118c <_vfiprintf_r+0x1ec>
 8001018:	2300      	movs	r3, #0
 800101a:	f04f 32ff 	mov.w	r2, #4294967295
 800101e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001022:	9304      	str	r3, [sp, #16]
 8001024:	9307      	str	r3, [sp, #28]
 8001026:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800102a:	931a      	str	r3, [sp, #104]	; 0x68
 800102c:	46a8      	mov	r8, r5
 800102e:	2205      	movs	r2, #5
 8001030:	f818 1b01 	ldrb.w	r1, [r8], #1
 8001034:	485e      	ldr	r0, [pc, #376]	; (80011b0 <_vfiprintf_r+0x210>)
 8001036:	f7ff f8f3 	bl	8000220 <memchr>
 800103a:	9b04      	ldr	r3, [sp, #16]
 800103c:	bb78      	cbnz	r0, 800109e <_vfiprintf_r+0xfe>
 800103e:	06d9      	lsls	r1, r3, #27
 8001040:	bf44      	itt	mi
 8001042:	2220      	movmi	r2, #32
 8001044:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8001048:	071a      	lsls	r2, r3, #28
 800104a:	bf44      	itt	mi
 800104c:	222b      	movmi	r2, #43	; 0x2b
 800104e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8001052:	782a      	ldrb	r2, [r5, #0]
 8001054:	2a2a      	cmp	r2, #42	; 0x2a
 8001056:	d02a      	beq.n	80010ae <_vfiprintf_r+0x10e>
 8001058:	9a07      	ldr	r2, [sp, #28]
 800105a:	46a8      	mov	r8, r5
 800105c:	2000      	movs	r0, #0
 800105e:	250a      	movs	r5, #10
 8001060:	4641      	mov	r1, r8
 8001062:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001066:	3b30      	subs	r3, #48	; 0x30
 8001068:	2b09      	cmp	r3, #9
 800106a:	d969      	bls.n	8001140 <_vfiprintf_r+0x1a0>
 800106c:	b360      	cbz	r0, 80010c8 <_vfiprintf_r+0x128>
 800106e:	e024      	b.n	80010ba <_vfiprintf_r+0x11a>
 8001070:	4b50      	ldr	r3, [pc, #320]	; (80011b4 <_vfiprintf_r+0x214>)
 8001072:	429c      	cmp	r4, r3
 8001074:	d101      	bne.n	800107a <_vfiprintf_r+0xda>
 8001076:	68b4      	ldr	r4, [r6, #8]
 8001078:	e7a2      	b.n	8000fc0 <_vfiprintf_r+0x20>
 800107a:	4b4f      	ldr	r3, [pc, #316]	; (80011b8 <_vfiprintf_r+0x218>)
 800107c:	429c      	cmp	r4, r3
 800107e:	bf08      	it	eq
 8001080:	68f4      	ldreq	r4, [r6, #12]
 8001082:	e79d      	b.n	8000fc0 <_vfiprintf_r+0x20>
 8001084:	4621      	mov	r1, r4
 8001086:	4630      	mov	r0, r6
 8001088:	f7ff fc6c 	bl	8000964 <__swsetup_r>
 800108c:	2800      	cmp	r0, #0
 800108e:	d09d      	beq.n	8000fcc <_vfiprintf_r+0x2c>
 8001090:	f04f 30ff 	mov.w	r0, #4294967295
 8001094:	b01d      	add	sp, #116	; 0x74
 8001096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800109a:	46a8      	mov	r8, r5
 800109c:	e7a2      	b.n	8000fe4 <_vfiprintf_r+0x44>
 800109e:	4a44      	ldr	r2, [pc, #272]	; (80011b0 <_vfiprintf_r+0x210>)
 80010a0:	1a80      	subs	r0, r0, r2
 80010a2:	fa0b f000 	lsl.w	r0, fp, r0
 80010a6:	4318      	orrs	r0, r3
 80010a8:	9004      	str	r0, [sp, #16]
 80010aa:	4645      	mov	r5, r8
 80010ac:	e7be      	b.n	800102c <_vfiprintf_r+0x8c>
 80010ae:	9a03      	ldr	r2, [sp, #12]
 80010b0:	1d11      	adds	r1, r2, #4
 80010b2:	6812      	ldr	r2, [r2, #0]
 80010b4:	9103      	str	r1, [sp, #12]
 80010b6:	2a00      	cmp	r2, #0
 80010b8:	db01      	blt.n	80010be <_vfiprintf_r+0x11e>
 80010ba:	9207      	str	r2, [sp, #28]
 80010bc:	e004      	b.n	80010c8 <_vfiprintf_r+0x128>
 80010be:	4252      	negs	r2, r2
 80010c0:	f043 0302 	orr.w	r3, r3, #2
 80010c4:	9207      	str	r2, [sp, #28]
 80010c6:	9304      	str	r3, [sp, #16]
 80010c8:	f898 3000 	ldrb.w	r3, [r8]
 80010cc:	2b2e      	cmp	r3, #46	; 0x2e
 80010ce:	d10e      	bne.n	80010ee <_vfiprintf_r+0x14e>
 80010d0:	f898 3001 	ldrb.w	r3, [r8, #1]
 80010d4:	2b2a      	cmp	r3, #42	; 0x2a
 80010d6:	d138      	bne.n	800114a <_vfiprintf_r+0x1aa>
 80010d8:	9b03      	ldr	r3, [sp, #12]
 80010da:	1d1a      	adds	r2, r3, #4
 80010dc:	681b      	ldr	r3, [r3, #0]
 80010de:	9203      	str	r2, [sp, #12]
 80010e0:	2b00      	cmp	r3, #0
 80010e2:	bfb8      	it	lt
 80010e4:	f04f 33ff 	movlt.w	r3, #4294967295
 80010e8:	f108 0802 	add.w	r8, r8, #2
 80010ec:	9305      	str	r3, [sp, #20]
 80010ee:	4d33      	ldr	r5, [pc, #204]	; (80011bc <_vfiprintf_r+0x21c>)
 80010f0:	f898 1000 	ldrb.w	r1, [r8]
 80010f4:	2203      	movs	r2, #3
 80010f6:	4628      	mov	r0, r5
 80010f8:	f7ff f892 	bl	8000220 <memchr>
 80010fc:	b140      	cbz	r0, 8001110 <_vfiprintf_r+0x170>
 80010fe:	2340      	movs	r3, #64	; 0x40
 8001100:	1b40      	subs	r0, r0, r5
 8001102:	fa03 f000 	lsl.w	r0, r3, r0
 8001106:	9b04      	ldr	r3, [sp, #16]
 8001108:	4303      	orrs	r3, r0
 800110a:	f108 0801 	add.w	r8, r8, #1
 800110e:	9304      	str	r3, [sp, #16]
 8001110:	f898 1000 	ldrb.w	r1, [r8]
 8001114:	482a      	ldr	r0, [pc, #168]	; (80011c0 <_vfiprintf_r+0x220>)
 8001116:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800111a:	2206      	movs	r2, #6
 800111c:	f108 0701 	add.w	r7, r8, #1
 8001120:	f7ff f87e 	bl	8000220 <memchr>
 8001124:	2800      	cmp	r0, #0
 8001126:	d037      	beq.n	8001198 <_vfiprintf_r+0x1f8>
 8001128:	4b26      	ldr	r3, [pc, #152]	; (80011c4 <_vfiprintf_r+0x224>)
 800112a:	bb1b      	cbnz	r3, 8001174 <_vfiprintf_r+0x1d4>
 800112c:	9b03      	ldr	r3, [sp, #12]
 800112e:	3307      	adds	r3, #7
 8001130:	f023 0307 	bic.w	r3, r3, #7
 8001134:	3308      	adds	r3, #8
 8001136:	9303      	str	r3, [sp, #12]
 8001138:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800113a:	444b      	add	r3, r9
 800113c:	9309      	str	r3, [sp, #36]	; 0x24
 800113e:	e750      	b.n	8000fe2 <_vfiprintf_r+0x42>
 8001140:	fb05 3202 	mla	r2, r5, r2, r3
 8001144:	2001      	movs	r0, #1
 8001146:	4688      	mov	r8, r1
 8001148:	e78a      	b.n	8001060 <_vfiprintf_r+0xc0>
 800114a:	2300      	movs	r3, #0
 800114c:	f108 0801 	add.w	r8, r8, #1
 8001150:	9305      	str	r3, [sp, #20]
 8001152:	4619      	mov	r1, r3
 8001154:	250a      	movs	r5, #10
 8001156:	4640      	mov	r0, r8
 8001158:	f810 2b01 	ldrb.w	r2, [r0], #1
 800115c:	3a30      	subs	r2, #48	; 0x30
 800115e:	2a09      	cmp	r2, #9
 8001160:	d903      	bls.n	800116a <_vfiprintf_r+0x1ca>
 8001162:	2b00      	cmp	r3, #0
 8001164:	d0c3      	beq.n	80010ee <_vfiprintf_r+0x14e>
 8001166:	9105      	str	r1, [sp, #20]
 8001168:	e7c1      	b.n	80010ee <_vfiprintf_r+0x14e>
 800116a:	fb05 2101 	mla	r1, r5, r1, r2
 800116e:	2301      	movs	r3, #1
 8001170:	4680      	mov	r8, r0
 8001172:	e7f0      	b.n	8001156 <_vfiprintf_r+0x1b6>
 8001174:	ab03      	add	r3, sp, #12
 8001176:	9300      	str	r3, [sp, #0]
 8001178:	4622      	mov	r2, r4
 800117a:	4b13      	ldr	r3, [pc, #76]	; (80011c8 <_vfiprintf_r+0x228>)
 800117c:	a904      	add	r1, sp, #16
 800117e:	4630      	mov	r0, r6
 8001180:	f3af 8000 	nop.w
 8001184:	f1b0 3fff 	cmp.w	r0, #4294967295
 8001188:	4681      	mov	r9, r0
 800118a:	d1d5      	bne.n	8001138 <_vfiprintf_r+0x198>
 800118c:	89a3      	ldrh	r3, [r4, #12]
 800118e:	065b      	lsls	r3, r3, #25
 8001190:	f53f af7e 	bmi.w	8001090 <_vfiprintf_r+0xf0>
 8001194:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001196:	e77d      	b.n	8001094 <_vfiprintf_r+0xf4>
 8001198:	ab03      	add	r3, sp, #12
 800119a:	9300      	str	r3, [sp, #0]
 800119c:	4622      	mov	r2, r4
 800119e:	4b0a      	ldr	r3, [pc, #40]	; (80011c8 <_vfiprintf_r+0x228>)
 80011a0:	a904      	add	r1, sp, #16
 80011a2:	4630      	mov	r0, r6
 80011a4:	f000 f888 	bl	80012b8 <_printf_i>
 80011a8:	e7ec      	b.n	8001184 <_vfiprintf_r+0x1e4>
 80011aa:	bf00      	nop
 80011ac:	080016c0 	.word	0x080016c0
 80011b0:	08001700 	.word	0x08001700
 80011b4:	080016e0 	.word	0x080016e0
 80011b8:	080016a0 	.word	0x080016a0
 80011bc:	08001706 	.word	0x08001706
 80011c0:	0800170a 	.word	0x0800170a
 80011c4:	00000000 	.word	0x00000000
 80011c8:	08000f7b 	.word	0x08000f7b

080011cc <_printf_common>:
 80011cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80011d0:	4691      	mov	r9, r2
 80011d2:	461f      	mov	r7, r3
 80011d4:	688a      	ldr	r2, [r1, #8]
 80011d6:	690b      	ldr	r3, [r1, #16]
 80011d8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80011dc:	4293      	cmp	r3, r2
 80011de:	bfb8      	it	lt
 80011e0:	4613      	movlt	r3, r2
 80011e2:	f8c9 3000 	str.w	r3, [r9]
 80011e6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80011ea:	4606      	mov	r6, r0
 80011ec:	460c      	mov	r4, r1
 80011ee:	b112      	cbz	r2, 80011f6 <_printf_common+0x2a>
 80011f0:	3301      	adds	r3, #1
 80011f2:	f8c9 3000 	str.w	r3, [r9]
 80011f6:	6823      	ldr	r3, [r4, #0]
 80011f8:	0699      	lsls	r1, r3, #26
 80011fa:	bf42      	ittt	mi
 80011fc:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001200:	3302      	addmi	r3, #2
 8001202:	f8c9 3000 	strmi.w	r3, [r9]
 8001206:	6825      	ldr	r5, [r4, #0]
 8001208:	f015 0506 	ands.w	r5, r5, #6
 800120c:	d107      	bne.n	800121e <_printf_common+0x52>
 800120e:	f104 0a19 	add.w	sl, r4, #25
 8001212:	68e3      	ldr	r3, [r4, #12]
 8001214:	f8d9 2000 	ldr.w	r2, [r9]
 8001218:	1a9b      	subs	r3, r3, r2
 800121a:	42ab      	cmp	r3, r5
 800121c:	dc28      	bgt.n	8001270 <_printf_common+0xa4>
 800121e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001222:	6822      	ldr	r2, [r4, #0]
 8001224:	3300      	adds	r3, #0
 8001226:	bf18      	it	ne
 8001228:	2301      	movne	r3, #1
 800122a:	0692      	lsls	r2, r2, #26
 800122c:	d42d      	bmi.n	800128a <_printf_common+0xbe>
 800122e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001232:	4639      	mov	r1, r7
 8001234:	4630      	mov	r0, r6
 8001236:	47c0      	blx	r8
 8001238:	3001      	adds	r0, #1
 800123a:	d020      	beq.n	800127e <_printf_common+0xb2>
 800123c:	6823      	ldr	r3, [r4, #0]
 800123e:	68e5      	ldr	r5, [r4, #12]
 8001240:	f8d9 2000 	ldr.w	r2, [r9]
 8001244:	f003 0306 	and.w	r3, r3, #6
 8001248:	2b04      	cmp	r3, #4
 800124a:	bf08      	it	eq
 800124c:	1aad      	subeq	r5, r5, r2
 800124e:	68a3      	ldr	r3, [r4, #8]
 8001250:	6922      	ldr	r2, [r4, #16]
 8001252:	bf0c      	ite	eq
 8001254:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001258:	2500      	movne	r5, #0
 800125a:	4293      	cmp	r3, r2
 800125c:	bfc4      	itt	gt
 800125e:	1a9b      	subgt	r3, r3, r2
 8001260:	18ed      	addgt	r5, r5, r3
 8001262:	f04f 0900 	mov.w	r9, #0
 8001266:	341a      	adds	r4, #26
 8001268:	454d      	cmp	r5, r9
 800126a:	d11a      	bne.n	80012a2 <_printf_common+0xd6>
 800126c:	2000      	movs	r0, #0
 800126e:	e008      	b.n	8001282 <_printf_common+0xb6>
 8001270:	2301      	movs	r3, #1
 8001272:	4652      	mov	r2, sl
 8001274:	4639      	mov	r1, r7
 8001276:	4630      	mov	r0, r6
 8001278:	47c0      	blx	r8
 800127a:	3001      	adds	r0, #1
 800127c:	d103      	bne.n	8001286 <_printf_common+0xba>
 800127e:	f04f 30ff 	mov.w	r0, #4294967295
 8001282:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001286:	3501      	adds	r5, #1
 8001288:	e7c3      	b.n	8001212 <_printf_common+0x46>
 800128a:	18e1      	adds	r1, r4, r3
 800128c:	1c5a      	adds	r2, r3, #1
 800128e:	2030      	movs	r0, #48	; 0x30
 8001290:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001294:	4422      	add	r2, r4
 8001296:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800129a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800129e:	3302      	adds	r3, #2
 80012a0:	e7c5      	b.n	800122e <_printf_common+0x62>
 80012a2:	2301      	movs	r3, #1
 80012a4:	4622      	mov	r2, r4
 80012a6:	4639      	mov	r1, r7
 80012a8:	4630      	mov	r0, r6
 80012aa:	47c0      	blx	r8
 80012ac:	3001      	adds	r0, #1
 80012ae:	d0e6      	beq.n	800127e <_printf_common+0xb2>
 80012b0:	f109 0901 	add.w	r9, r9, #1
 80012b4:	e7d8      	b.n	8001268 <_printf_common+0x9c>
	...

080012b8 <_printf_i>:
 80012b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80012bc:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80012c0:	460c      	mov	r4, r1
 80012c2:	7e09      	ldrb	r1, [r1, #24]
 80012c4:	b085      	sub	sp, #20
 80012c6:	296e      	cmp	r1, #110	; 0x6e
 80012c8:	4617      	mov	r7, r2
 80012ca:	4606      	mov	r6, r0
 80012cc:	4698      	mov	r8, r3
 80012ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80012d0:	f000 80b3 	beq.w	800143a <_printf_i+0x182>
 80012d4:	d822      	bhi.n	800131c <_printf_i+0x64>
 80012d6:	2963      	cmp	r1, #99	; 0x63
 80012d8:	d036      	beq.n	8001348 <_printf_i+0x90>
 80012da:	d80a      	bhi.n	80012f2 <_printf_i+0x3a>
 80012dc:	2900      	cmp	r1, #0
 80012de:	f000 80b9 	beq.w	8001454 <_printf_i+0x19c>
 80012e2:	2958      	cmp	r1, #88	; 0x58
 80012e4:	f000 8083 	beq.w	80013ee <_printf_i+0x136>
 80012e8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80012ec:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80012f0:	e032      	b.n	8001358 <_printf_i+0xa0>
 80012f2:	2964      	cmp	r1, #100	; 0x64
 80012f4:	d001      	beq.n	80012fa <_printf_i+0x42>
 80012f6:	2969      	cmp	r1, #105	; 0x69
 80012f8:	d1f6      	bne.n	80012e8 <_printf_i+0x30>
 80012fa:	6820      	ldr	r0, [r4, #0]
 80012fc:	6813      	ldr	r3, [r2, #0]
 80012fe:	0605      	lsls	r5, r0, #24
 8001300:	f103 0104 	add.w	r1, r3, #4
 8001304:	d52a      	bpl.n	800135c <_printf_i+0xa4>
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	6011      	str	r1, [r2, #0]
 800130a:	2b00      	cmp	r3, #0
 800130c:	da03      	bge.n	8001316 <_printf_i+0x5e>
 800130e:	222d      	movs	r2, #45	; 0x2d
 8001310:	425b      	negs	r3, r3
 8001312:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8001316:	486f      	ldr	r0, [pc, #444]	; (80014d4 <_printf_i+0x21c>)
 8001318:	220a      	movs	r2, #10
 800131a:	e039      	b.n	8001390 <_printf_i+0xd8>
 800131c:	2973      	cmp	r1, #115	; 0x73
 800131e:	f000 809d 	beq.w	800145c <_printf_i+0x1a4>
 8001322:	d808      	bhi.n	8001336 <_printf_i+0x7e>
 8001324:	296f      	cmp	r1, #111	; 0x6f
 8001326:	d020      	beq.n	800136a <_printf_i+0xb2>
 8001328:	2970      	cmp	r1, #112	; 0x70
 800132a:	d1dd      	bne.n	80012e8 <_printf_i+0x30>
 800132c:	6823      	ldr	r3, [r4, #0]
 800132e:	f043 0320 	orr.w	r3, r3, #32
 8001332:	6023      	str	r3, [r4, #0]
 8001334:	e003      	b.n	800133e <_printf_i+0x86>
 8001336:	2975      	cmp	r1, #117	; 0x75
 8001338:	d017      	beq.n	800136a <_printf_i+0xb2>
 800133a:	2978      	cmp	r1, #120	; 0x78
 800133c:	d1d4      	bne.n	80012e8 <_printf_i+0x30>
 800133e:	2378      	movs	r3, #120	; 0x78
 8001340:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001344:	4864      	ldr	r0, [pc, #400]	; (80014d8 <_printf_i+0x220>)
 8001346:	e055      	b.n	80013f4 <_printf_i+0x13c>
 8001348:	6813      	ldr	r3, [r2, #0]
 800134a:	1d19      	adds	r1, r3, #4
 800134c:	681b      	ldr	r3, [r3, #0]
 800134e:	6011      	str	r1, [r2, #0]
 8001350:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001354:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001358:	2301      	movs	r3, #1
 800135a:	e08c      	b.n	8001476 <_printf_i+0x1be>
 800135c:	681b      	ldr	r3, [r3, #0]
 800135e:	6011      	str	r1, [r2, #0]
 8001360:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001364:	bf18      	it	ne
 8001366:	b21b      	sxthne	r3, r3
 8001368:	e7cf      	b.n	800130a <_printf_i+0x52>
 800136a:	6813      	ldr	r3, [r2, #0]
 800136c:	6825      	ldr	r5, [r4, #0]
 800136e:	1d18      	adds	r0, r3, #4
 8001370:	6010      	str	r0, [r2, #0]
 8001372:	0628      	lsls	r0, r5, #24
 8001374:	d501      	bpl.n	800137a <_printf_i+0xc2>
 8001376:	681b      	ldr	r3, [r3, #0]
 8001378:	e002      	b.n	8001380 <_printf_i+0xc8>
 800137a:	0668      	lsls	r0, r5, #25
 800137c:	d5fb      	bpl.n	8001376 <_printf_i+0xbe>
 800137e:	881b      	ldrh	r3, [r3, #0]
 8001380:	4854      	ldr	r0, [pc, #336]	; (80014d4 <_printf_i+0x21c>)
 8001382:	296f      	cmp	r1, #111	; 0x6f
 8001384:	bf14      	ite	ne
 8001386:	220a      	movne	r2, #10
 8001388:	2208      	moveq	r2, #8
 800138a:	2100      	movs	r1, #0
 800138c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001390:	6865      	ldr	r5, [r4, #4]
 8001392:	60a5      	str	r5, [r4, #8]
 8001394:	2d00      	cmp	r5, #0
 8001396:	f2c0 8095 	blt.w	80014c4 <_printf_i+0x20c>
 800139a:	6821      	ldr	r1, [r4, #0]
 800139c:	f021 0104 	bic.w	r1, r1, #4
 80013a0:	6021      	str	r1, [r4, #0]
 80013a2:	2b00      	cmp	r3, #0
 80013a4:	d13d      	bne.n	8001422 <_printf_i+0x16a>
 80013a6:	2d00      	cmp	r5, #0
 80013a8:	f040 808e 	bne.w	80014c8 <_printf_i+0x210>
 80013ac:	4665      	mov	r5, ip
 80013ae:	2a08      	cmp	r2, #8
 80013b0:	d10b      	bne.n	80013ca <_printf_i+0x112>
 80013b2:	6823      	ldr	r3, [r4, #0]
 80013b4:	07db      	lsls	r3, r3, #31
 80013b6:	d508      	bpl.n	80013ca <_printf_i+0x112>
 80013b8:	6923      	ldr	r3, [r4, #16]
 80013ba:	6862      	ldr	r2, [r4, #4]
 80013bc:	429a      	cmp	r2, r3
 80013be:	bfde      	ittt	le
 80013c0:	2330      	movle	r3, #48	; 0x30
 80013c2:	f805 3c01 	strble.w	r3, [r5, #-1]
 80013c6:	f105 35ff 	addle.w	r5, r5, #4294967295
 80013ca:	ebac 0305 	sub.w	r3, ip, r5
 80013ce:	6123      	str	r3, [r4, #16]
 80013d0:	f8cd 8000 	str.w	r8, [sp]
 80013d4:	463b      	mov	r3, r7
 80013d6:	aa03      	add	r2, sp, #12
 80013d8:	4621      	mov	r1, r4
 80013da:	4630      	mov	r0, r6
 80013dc:	f7ff fef6 	bl	80011cc <_printf_common>
 80013e0:	3001      	adds	r0, #1
 80013e2:	d14d      	bne.n	8001480 <_printf_i+0x1c8>
 80013e4:	f04f 30ff 	mov.w	r0, #4294967295
 80013e8:	b005      	add	sp, #20
 80013ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80013ee:	4839      	ldr	r0, [pc, #228]	; (80014d4 <_printf_i+0x21c>)
 80013f0:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80013f4:	6813      	ldr	r3, [r2, #0]
 80013f6:	6821      	ldr	r1, [r4, #0]
 80013f8:	1d1d      	adds	r5, r3, #4
 80013fa:	681b      	ldr	r3, [r3, #0]
 80013fc:	6015      	str	r5, [r2, #0]
 80013fe:	060a      	lsls	r2, r1, #24
 8001400:	d50b      	bpl.n	800141a <_printf_i+0x162>
 8001402:	07ca      	lsls	r2, r1, #31
 8001404:	bf44      	itt	mi
 8001406:	f041 0120 	orrmi.w	r1, r1, #32
 800140a:	6021      	strmi	r1, [r4, #0]
 800140c:	b91b      	cbnz	r3, 8001416 <_printf_i+0x15e>
 800140e:	6822      	ldr	r2, [r4, #0]
 8001410:	f022 0220 	bic.w	r2, r2, #32
 8001414:	6022      	str	r2, [r4, #0]
 8001416:	2210      	movs	r2, #16
 8001418:	e7b7      	b.n	800138a <_printf_i+0xd2>
 800141a:	064d      	lsls	r5, r1, #25
 800141c:	bf48      	it	mi
 800141e:	b29b      	uxthmi	r3, r3
 8001420:	e7ef      	b.n	8001402 <_printf_i+0x14a>
 8001422:	4665      	mov	r5, ip
 8001424:	fbb3 f1f2 	udiv	r1, r3, r2
 8001428:	fb02 3311 	mls	r3, r2, r1, r3
 800142c:	5cc3      	ldrb	r3, [r0, r3]
 800142e:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8001432:	460b      	mov	r3, r1
 8001434:	2900      	cmp	r1, #0
 8001436:	d1f5      	bne.n	8001424 <_printf_i+0x16c>
 8001438:	e7b9      	b.n	80013ae <_printf_i+0xf6>
 800143a:	6813      	ldr	r3, [r2, #0]
 800143c:	6825      	ldr	r5, [r4, #0]
 800143e:	6961      	ldr	r1, [r4, #20]
 8001440:	1d18      	adds	r0, r3, #4
 8001442:	6010      	str	r0, [r2, #0]
 8001444:	0628      	lsls	r0, r5, #24
 8001446:	681b      	ldr	r3, [r3, #0]
 8001448:	d501      	bpl.n	800144e <_printf_i+0x196>
 800144a:	6019      	str	r1, [r3, #0]
 800144c:	e002      	b.n	8001454 <_printf_i+0x19c>
 800144e:	066a      	lsls	r2, r5, #25
 8001450:	d5fb      	bpl.n	800144a <_printf_i+0x192>
 8001452:	8019      	strh	r1, [r3, #0]
 8001454:	2300      	movs	r3, #0
 8001456:	6123      	str	r3, [r4, #16]
 8001458:	4665      	mov	r5, ip
 800145a:	e7b9      	b.n	80013d0 <_printf_i+0x118>
 800145c:	6813      	ldr	r3, [r2, #0]
 800145e:	1d19      	adds	r1, r3, #4
 8001460:	6011      	str	r1, [r2, #0]
 8001462:	681d      	ldr	r5, [r3, #0]
 8001464:	6862      	ldr	r2, [r4, #4]
 8001466:	2100      	movs	r1, #0
 8001468:	4628      	mov	r0, r5
 800146a:	f7fe fed9 	bl	8000220 <memchr>
 800146e:	b108      	cbz	r0, 8001474 <_printf_i+0x1bc>
 8001470:	1b40      	subs	r0, r0, r5
 8001472:	6060      	str	r0, [r4, #4]
 8001474:	6863      	ldr	r3, [r4, #4]
 8001476:	6123      	str	r3, [r4, #16]
 8001478:	2300      	movs	r3, #0
 800147a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800147e:	e7a7      	b.n	80013d0 <_printf_i+0x118>
 8001480:	6923      	ldr	r3, [r4, #16]
 8001482:	462a      	mov	r2, r5
 8001484:	4639      	mov	r1, r7
 8001486:	4630      	mov	r0, r6
 8001488:	47c0      	blx	r8
 800148a:	3001      	adds	r0, #1
 800148c:	d0aa      	beq.n	80013e4 <_printf_i+0x12c>
 800148e:	6823      	ldr	r3, [r4, #0]
 8001490:	079b      	lsls	r3, r3, #30
 8001492:	d413      	bmi.n	80014bc <_printf_i+0x204>
 8001494:	68e0      	ldr	r0, [r4, #12]
 8001496:	9b03      	ldr	r3, [sp, #12]
 8001498:	4298      	cmp	r0, r3
 800149a:	bfb8      	it	lt
 800149c:	4618      	movlt	r0, r3
 800149e:	e7a3      	b.n	80013e8 <_printf_i+0x130>
 80014a0:	2301      	movs	r3, #1
 80014a2:	464a      	mov	r2, r9
 80014a4:	4639      	mov	r1, r7
 80014a6:	4630      	mov	r0, r6
 80014a8:	47c0      	blx	r8
 80014aa:	3001      	adds	r0, #1
 80014ac:	d09a      	beq.n	80013e4 <_printf_i+0x12c>
 80014ae:	3501      	adds	r5, #1
 80014b0:	68e3      	ldr	r3, [r4, #12]
 80014b2:	9a03      	ldr	r2, [sp, #12]
 80014b4:	1a9b      	subs	r3, r3, r2
 80014b6:	42ab      	cmp	r3, r5
 80014b8:	dcf2      	bgt.n	80014a0 <_printf_i+0x1e8>
 80014ba:	e7eb      	b.n	8001494 <_printf_i+0x1dc>
 80014bc:	2500      	movs	r5, #0
 80014be:	f104 0919 	add.w	r9, r4, #25
 80014c2:	e7f5      	b.n	80014b0 <_printf_i+0x1f8>
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	d1ac      	bne.n	8001422 <_printf_i+0x16a>
 80014c8:	7803      	ldrb	r3, [r0, #0]
 80014ca:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80014ce:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80014d2:	e76c      	b.n	80013ae <_printf_i+0xf6>
 80014d4:	08001711 	.word	0x08001711
 80014d8:	08001722 	.word	0x08001722

080014dc <_sbrk_r>:
 80014dc:	b538      	push	{r3, r4, r5, lr}
 80014de:	4c06      	ldr	r4, [pc, #24]	; (80014f8 <_sbrk_r+0x1c>)
 80014e0:	2300      	movs	r3, #0
 80014e2:	4605      	mov	r5, r0
 80014e4:	4608      	mov	r0, r1
 80014e6:	6023      	str	r3, [r4, #0]
 80014e8:	f7ff f8dc 	bl	80006a4 <_sbrk>
 80014ec:	1c43      	adds	r3, r0, #1
 80014ee:	d102      	bne.n	80014f6 <_sbrk_r+0x1a>
 80014f0:	6823      	ldr	r3, [r4, #0]
 80014f2:	b103      	cbz	r3, 80014f6 <_sbrk_r+0x1a>
 80014f4:	602b      	str	r3, [r5, #0]
 80014f6:	bd38      	pop	{r3, r4, r5, pc}
 80014f8:	20000094 	.word	0x20000094

080014fc <__sread>:
 80014fc:	b510      	push	{r4, lr}
 80014fe:	460c      	mov	r4, r1
 8001500:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001504:	f000 f896 	bl	8001634 <_read_r>
 8001508:	2800      	cmp	r0, #0
 800150a:	bfab      	itete	ge
 800150c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800150e:	89a3      	ldrhlt	r3, [r4, #12]
 8001510:	181b      	addge	r3, r3, r0
 8001512:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001516:	bfac      	ite	ge
 8001518:	6563      	strge	r3, [r4, #84]	; 0x54
 800151a:	81a3      	strhlt	r3, [r4, #12]
 800151c:	bd10      	pop	{r4, pc}

0800151e <__swrite>:
 800151e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001522:	461f      	mov	r7, r3
 8001524:	898b      	ldrh	r3, [r1, #12]
 8001526:	05db      	lsls	r3, r3, #23
 8001528:	4605      	mov	r5, r0
 800152a:	460c      	mov	r4, r1
 800152c:	4616      	mov	r6, r2
 800152e:	d505      	bpl.n	800153c <__swrite+0x1e>
 8001530:	2302      	movs	r3, #2
 8001532:	2200      	movs	r2, #0
 8001534:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001538:	f000 f868 	bl	800160c <_lseek_r>
 800153c:	89a3      	ldrh	r3, [r4, #12]
 800153e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001542:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001546:	81a3      	strh	r3, [r4, #12]
 8001548:	4632      	mov	r2, r6
 800154a:	463b      	mov	r3, r7
 800154c:	4628      	mov	r0, r5
 800154e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001552:	f000 b817 	b.w	8001584 <_write_r>

08001556 <__sseek>:
 8001556:	b510      	push	{r4, lr}
 8001558:	460c      	mov	r4, r1
 800155a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800155e:	f000 f855 	bl	800160c <_lseek_r>
 8001562:	1c43      	adds	r3, r0, #1
 8001564:	89a3      	ldrh	r3, [r4, #12]
 8001566:	bf15      	itete	ne
 8001568:	6560      	strne	r0, [r4, #84]	; 0x54
 800156a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800156e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001572:	81a3      	strheq	r3, [r4, #12]
 8001574:	bf18      	it	ne
 8001576:	81a3      	strhne	r3, [r4, #12]
 8001578:	bd10      	pop	{r4, pc}

0800157a <__sclose>:
 800157a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800157e:	f000 b813 	b.w	80015a8 <_close_r>
	...

08001584 <_write_r>:
 8001584:	b538      	push	{r3, r4, r5, lr}
 8001586:	4c07      	ldr	r4, [pc, #28]	; (80015a4 <_write_r+0x20>)
 8001588:	4605      	mov	r5, r0
 800158a:	4608      	mov	r0, r1
 800158c:	4611      	mov	r1, r2
 800158e:	2200      	movs	r2, #0
 8001590:	6022      	str	r2, [r4, #0]
 8001592:	461a      	mov	r2, r3
 8001594:	f7ff f835 	bl	8000602 <_write>
 8001598:	1c43      	adds	r3, r0, #1
 800159a:	d102      	bne.n	80015a2 <_write_r+0x1e>
 800159c:	6823      	ldr	r3, [r4, #0]
 800159e:	b103      	cbz	r3, 80015a2 <_write_r+0x1e>
 80015a0:	602b      	str	r3, [r5, #0]
 80015a2:	bd38      	pop	{r3, r4, r5, pc}
 80015a4:	20000094 	.word	0x20000094

080015a8 <_close_r>:
 80015a8:	b538      	push	{r3, r4, r5, lr}
 80015aa:	4c06      	ldr	r4, [pc, #24]	; (80015c4 <_close_r+0x1c>)
 80015ac:	2300      	movs	r3, #0
 80015ae:	4605      	mov	r5, r0
 80015b0:	4608      	mov	r0, r1
 80015b2:	6023      	str	r3, [r4, #0]
 80015b4:	f7ff f841 	bl	800063a <_close>
 80015b8:	1c43      	adds	r3, r0, #1
 80015ba:	d102      	bne.n	80015c2 <_close_r+0x1a>
 80015bc:	6823      	ldr	r3, [r4, #0]
 80015be:	b103      	cbz	r3, 80015c2 <_close_r+0x1a>
 80015c0:	602b      	str	r3, [r5, #0]
 80015c2:	bd38      	pop	{r3, r4, r5, pc}
 80015c4:	20000094 	.word	0x20000094

080015c8 <_fstat_r>:
 80015c8:	b538      	push	{r3, r4, r5, lr}
 80015ca:	4c07      	ldr	r4, [pc, #28]	; (80015e8 <_fstat_r+0x20>)
 80015cc:	2300      	movs	r3, #0
 80015ce:	4605      	mov	r5, r0
 80015d0:	4608      	mov	r0, r1
 80015d2:	4611      	mov	r1, r2
 80015d4:	6023      	str	r3, [r4, #0]
 80015d6:	f7ff f83c 	bl	8000652 <_fstat>
 80015da:	1c43      	adds	r3, r0, #1
 80015dc:	d102      	bne.n	80015e4 <_fstat_r+0x1c>
 80015de:	6823      	ldr	r3, [r4, #0]
 80015e0:	b103      	cbz	r3, 80015e4 <_fstat_r+0x1c>
 80015e2:	602b      	str	r3, [r5, #0]
 80015e4:	bd38      	pop	{r3, r4, r5, pc}
 80015e6:	bf00      	nop
 80015e8:	20000094 	.word	0x20000094

080015ec <_isatty_r>:
 80015ec:	b538      	push	{r3, r4, r5, lr}
 80015ee:	4c06      	ldr	r4, [pc, #24]	; (8001608 <_isatty_r+0x1c>)
 80015f0:	2300      	movs	r3, #0
 80015f2:	4605      	mov	r5, r0
 80015f4:	4608      	mov	r0, r1
 80015f6:	6023      	str	r3, [r4, #0]
 80015f8:	f7ff f83b 	bl	8000672 <_isatty>
 80015fc:	1c43      	adds	r3, r0, #1
 80015fe:	d102      	bne.n	8001606 <_isatty_r+0x1a>
 8001600:	6823      	ldr	r3, [r4, #0]
 8001602:	b103      	cbz	r3, 8001606 <_isatty_r+0x1a>
 8001604:	602b      	str	r3, [r5, #0]
 8001606:	bd38      	pop	{r3, r4, r5, pc}
 8001608:	20000094 	.word	0x20000094

0800160c <_lseek_r>:
 800160c:	b538      	push	{r3, r4, r5, lr}
 800160e:	4c07      	ldr	r4, [pc, #28]	; (800162c <_lseek_r+0x20>)
 8001610:	4605      	mov	r5, r0
 8001612:	4608      	mov	r0, r1
 8001614:	4611      	mov	r1, r2
 8001616:	2200      	movs	r2, #0
 8001618:	6022      	str	r2, [r4, #0]
 800161a:	461a      	mov	r2, r3
 800161c:	f7ff f834 	bl	8000688 <_lseek>
 8001620:	1c43      	adds	r3, r0, #1
 8001622:	d102      	bne.n	800162a <_lseek_r+0x1e>
 8001624:	6823      	ldr	r3, [r4, #0]
 8001626:	b103      	cbz	r3, 800162a <_lseek_r+0x1e>
 8001628:	602b      	str	r3, [r5, #0]
 800162a:	bd38      	pop	{r3, r4, r5, pc}
 800162c:	20000094 	.word	0x20000094

08001630 <__malloc_lock>:
 8001630:	4770      	bx	lr

08001632 <__malloc_unlock>:
 8001632:	4770      	bx	lr

08001634 <_read_r>:
 8001634:	b538      	push	{r3, r4, r5, lr}
 8001636:	4c07      	ldr	r4, [pc, #28]	; (8001654 <_read_r+0x20>)
 8001638:	4605      	mov	r5, r0
 800163a:	4608      	mov	r0, r1
 800163c:	4611      	mov	r1, r2
 800163e:	2200      	movs	r2, #0
 8001640:	6022      	str	r2, [r4, #0]
 8001642:	461a      	mov	r2, r3
 8001644:	f7fe ffc0 	bl	80005c8 <_read>
 8001648:	1c43      	adds	r3, r0, #1
 800164a:	d102      	bne.n	8001652 <_read_r+0x1e>
 800164c:	6823      	ldr	r3, [r4, #0]
 800164e:	b103      	cbz	r3, 8001652 <_read_r+0x1e>
 8001650:	602b      	str	r3, [r5, #0]
 8001652:	bd38      	pop	{r3, r4, r5, pc}
 8001654:	20000094 	.word	0x20000094

08001658 <_init>:
 8001658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800165a:	bf00      	nop
 800165c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800165e:	bc08      	pop	{r3}
 8001660:	469e      	mov	lr, r3
 8001662:	4770      	bx	lr

08001664 <_fini>:
 8001664:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001666:	bf00      	nop
 8001668:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800166a:	bc08      	pop	{r3}
 800166c:	469e      	mov	lr, r3
 800166e:	4770      	bx	lr
