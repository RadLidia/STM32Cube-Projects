
blinkyLED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000019c  08000000  08000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001f8  0800019c  0800019c  0001019c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000394  0800039c  0001039c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000394  08000394  0001039c  2**0
                  CONTENTS
  4 .ARM          00000000  08000394  08000394  0001039c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000394  0800039c  0001039c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000394  08000394  00010394  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000398  08000398  00010398  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001039c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800039c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800039c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001039c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000000c1  00000000  00000000  000103cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000000ae  00000000  00000000  0001048d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000050  00000000  00000000  00010540  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000038  00000000  00000000  00010590  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000ac5  00000000  00000000  000105c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000137  00000000  00000000  0001108d  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00002f53  00000000  00000000  000111c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00014117  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000080  00000000  00000000  00014194  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800019c <__do_global_dtors_aux>:
 800019c:	b510      	push	{r4, lr}
 800019e:	4c05      	ldr	r4, [pc, #20]	; (80001b4 <__do_global_dtors_aux+0x18>)
 80001a0:	7823      	ldrb	r3, [r4, #0]
 80001a2:	b933      	cbnz	r3, 80001b2 <__do_global_dtors_aux+0x16>
 80001a4:	4b04      	ldr	r3, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x1c>)
 80001a6:	b113      	cbz	r3, 80001ae <__do_global_dtors_aux+0x12>
 80001a8:	4804      	ldr	r0, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x20>)
 80001aa:	f3af 8000 	nop.w
 80001ae:	2301      	movs	r3, #1
 80001b0:	7023      	strb	r3, [r4, #0]
 80001b2:	bd10      	pop	{r4, pc}
 80001b4:	20000000 	.word	0x20000000
 80001b8:	00000000 	.word	0x00000000
 80001bc:	0800037c 	.word	0x0800037c

080001c0 <frame_dummy>:
 80001c0:	b508      	push	{r3, lr}
 80001c2:	4b03      	ldr	r3, [pc, #12]	; (80001d0 <frame_dummy+0x10>)
 80001c4:	b11b      	cbz	r3, 80001ce <frame_dummy+0xe>
 80001c6:	4903      	ldr	r1, [pc, #12]	; (80001d4 <frame_dummy+0x14>)
 80001c8:	4803      	ldr	r0, [pc, #12]	; (80001d8 <frame_dummy+0x18>)
 80001ca:	f3af 8000 	nop.w
 80001ce:	bd08      	pop	{r3, pc}
 80001d0:	00000000 	.word	0x00000000
 80001d4:	20000004 	.word	0x20000004
 80001d8:	0800037c 	.word	0x0800037c

080001dc <main>:
unsigned long *vector_table[] __attribute__((section(".isr_vector"))) = {
    (unsigned long *)SRAM_END,   // initial stack pointer
    (unsigned long *)main        // main as Reset_Handler
};

int main() {
 80001dc:	b580      	push	{r7, lr}
 80001de:	af00      	add	r7, sp, #0
    // enable GPIOA clock
    *RCC_APB1ENR = 0x3; // + GPIOA? 0x03
 80001e0:	4b31      	ldr	r3, [pc, #196]	; (80002a8 <main+0xcc>)
 80001e2:	2203      	movs	r2, #3
 80001e4:	601a      	str	r2, [r3, #0]
    // change mode of 5 - MODER[11:10] = 0x01
    setbit(*GPIOA_MODER, 10);
 80001e6:	4b31      	ldr	r3, [pc, #196]	; (80002ac <main+0xd0>)
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	4a30      	ldr	r2, [pc, #192]	; (80002ac <main+0xd0>)
 80001ec:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80001f0:	6013      	str	r3, [r2, #0]
    // change mode of 6 - MODER[11:10] = 0x01
    setbit(*GPIOA_MODER, 12);
 80001f2:	4b2e      	ldr	r3, [pc, #184]	; (80002ac <main+0xd0>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	4a2d      	ldr	r2, [pc, #180]	; (80002ac <main+0xd0>)
 80001f8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80001fc:	6013      	str	r3, [r2, #0]
    setbit(*GPIOA_MODER, 14);
 80001fe:	4b2b      	ldr	r3, [pc, #172]	; (80002ac <main+0xd0>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	4a2a      	ldr	r2, [pc, #168]	; (80002ac <main+0xd0>)
 8000204:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000208:	6013      	str	r3, [r2, #0]
    //*RCC_APB1ENR = 0x2;
    setbit(*GPIOB_MODER, 12);
 800020a:	4b29      	ldr	r3, [pc, #164]	; (80002b0 <main+0xd4>)
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	4a28      	ldr	r2, [pc, #160]	; (80002b0 <main+0xd4>)
 8000210:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000214:	6013      	str	r3, [r2, #0]


    while(1) {
    	clearbit(*GPIOA_ODR, 5);
 8000216:	4b27      	ldr	r3, [pc, #156]	; (80002b4 <main+0xd8>)
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	4a26      	ldr	r2, [pc, #152]	; (80002b4 <main+0xd8>)
 800021c:	f023 0320 	bic.w	r3, r3, #32
 8000220:	6013      	str	r3, [r2, #0]
    	delay(200000);
 8000222:	4825      	ldr	r0, [pc, #148]	; (80002b8 <main+0xdc>)
 8000224:	f000 f84c 	bl	80002c0 <delay>
    	clearbit(*GPIOA_ODR, 6);
 8000228:	4b22      	ldr	r3, [pc, #136]	; (80002b4 <main+0xd8>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	4a21      	ldr	r2, [pc, #132]	; (80002b4 <main+0xd8>)
 800022e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000232:	6013      	str	r3, [r2, #0]
    	delay(200000);
 8000234:	4820      	ldr	r0, [pc, #128]	; (80002b8 <main+0xdc>)
 8000236:	f000 f843 	bl	80002c0 <delay>
    	clearbit(*GPIOA_ODR, 7);
 800023a:	4b1e      	ldr	r3, [pc, #120]	; (80002b4 <main+0xd8>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4a1d      	ldr	r2, [pc, #116]	; (80002b4 <main+0xd8>)
 8000240:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000244:	6013      	str	r3, [r2, #0]
    	delay(200000);
 8000246:	481c      	ldr	r0, [pc, #112]	; (80002b8 <main+0xdc>)
 8000248:	f000 f83a 	bl	80002c0 <delay>
    	clearbit(*GPIOB_ODR, 6);
 800024c:	4b1b      	ldr	r3, [pc, #108]	; (80002bc <main+0xe0>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	4a1a      	ldr	r2, [pc, #104]	; (80002bc <main+0xe0>)
 8000252:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000256:	6013      	str	r3, [r2, #0]
    	delay(200000);
 8000258:	4817      	ldr	r0, [pc, #92]	; (80002b8 <main+0xdc>)
 800025a:	f000 f831 	bl	80002c0 <delay>
    	setbit(*GPIOA_ODR, 5);
 800025e:	4b15      	ldr	r3, [pc, #84]	; (80002b4 <main+0xd8>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	4a14      	ldr	r2, [pc, #80]	; (80002b4 <main+0xd8>)
 8000264:	f043 0320 	orr.w	r3, r3, #32
 8000268:	6013      	str	r3, [r2, #0]
        delay(200000);
 800026a:	4813      	ldr	r0, [pc, #76]	; (80002b8 <main+0xdc>)
 800026c:	f000 f828 	bl	80002c0 <delay>
    	setbit(*GPIOA_ODR, 6);
 8000270:	4b10      	ldr	r3, [pc, #64]	; (80002b4 <main+0xd8>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	4a0f      	ldr	r2, [pc, #60]	; (80002b4 <main+0xd8>)
 8000276:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800027a:	6013      	str	r3, [r2, #0]
    	delay(200000);
 800027c:	480e      	ldr	r0, [pc, #56]	; (80002b8 <main+0xdc>)
 800027e:	f000 f81f 	bl	80002c0 <delay>
    	setbit(*GPIOA_ODR, 7);
 8000282:	4b0c      	ldr	r3, [pc, #48]	; (80002b4 <main+0xd8>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	4a0b      	ldr	r2, [pc, #44]	; (80002b4 <main+0xd8>)
 8000288:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800028c:	6013      	str	r3, [r2, #0]
    	delay(200000);
 800028e:	480a      	ldr	r0, [pc, #40]	; (80002b8 <main+0xdc>)
 8000290:	f000 f816 	bl	80002c0 <delay>
    	setbit(*GPIOB_ODR, 6);
 8000294:	4b09      	ldr	r3, [pc, #36]	; (80002bc <main+0xe0>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	4a08      	ldr	r2, [pc, #32]	; (80002bc <main+0xe0>)
 800029a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800029e:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002a0:	4805      	ldr	r0, [pc, #20]	; (80002b8 <main+0xdc>)
 80002a2:	f000 f80d 	bl	80002c0 <delay>
    	clearbit(*GPIOA_ODR, 5);
 80002a6:	e7b6      	b.n	8000216 <main+0x3a>
 80002a8:	40023830 	.word	0x40023830
 80002ac:	40020000 	.word	0x40020000
 80002b0:	40020400 	.word	0x40020400
 80002b4:	40020014 	.word	0x40020014
 80002b8:	00030d40 	.word	0x00030d40
 80002bc:	40020414 	.word	0x40020414

080002c0 <delay>:

    }
}

// delay function - doing literally nothing
void delay(unsigned long count) {
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	6078      	str	r0, [r7, #4]
    while(count--);
 80002c8:	bf00      	nop
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	1e5a      	subs	r2, r3, #1
 80002ce:	607a      	str	r2, [r7, #4]
 80002d0:	2b00      	cmp	r3, #0
 80002d2:	d1fa      	bne.n	80002ca <delay+0xa>
}
 80002d4:	bf00      	nop
 80002d6:	370c      	adds	r7, #12
 80002d8:	46bd      	mov	sp, r7
 80002da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002de:	4770      	bx	lr

080002e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e0:	480d      	ldr	r0, [pc, #52]	; (8000318 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002e2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002e4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e8:	480c      	ldr	r0, [pc, #48]	; (800031c <LoopForever+0x6>)
  ldr r1, =_edata
 80002ea:	490d      	ldr	r1, [pc, #52]	; (8000320 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ec:	4a0d      	ldr	r2, [pc, #52]	; (8000324 <LoopForever+0xe>)
  movs r3, #0
 80002ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f0:	e002      	b.n	80002f8 <LoopCopyDataInit>

080002f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f6:	3304      	adds	r3, #4

080002f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002fc:	d3f9      	bcc.n	80002f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fe:	4a0a      	ldr	r2, [pc, #40]	; (8000328 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000300:	4c0a      	ldr	r4, [pc, #40]	; (800032c <LoopForever+0x16>)
  movs r3, #0
 8000302:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000304:	e001      	b.n	800030a <LoopFillZerobss>

08000306 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000306:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000308:	3204      	adds	r2, #4

0800030a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800030a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800030c:	d3fb      	bcc.n	8000306 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800030e:	f000 f811 	bl	8000334 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000312:	f7ff ff63 	bl	80001dc <main>

08000316 <LoopForever>:

LoopForever:
    b LoopForever
 8000316:	e7fe      	b.n	8000316 <LoopForever>
  ldr   r0, =_estack
 8000318:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800031c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000320:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000324:	0800039c 	.word	0x0800039c
  ldr r2, =_sbss
 8000328:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800032c:	2000001c 	.word	0x2000001c

08000330 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000330:	e7fe      	b.n	8000330 <ADC_IRQHandler>
	...

08000334 <__libc_init_array>:
 8000334:	b570      	push	{r4, r5, r6, lr}
 8000336:	4e0d      	ldr	r6, [pc, #52]	; (800036c <__libc_init_array+0x38>)
 8000338:	4c0d      	ldr	r4, [pc, #52]	; (8000370 <__libc_init_array+0x3c>)
 800033a:	1ba4      	subs	r4, r4, r6
 800033c:	10a4      	asrs	r4, r4, #2
 800033e:	2500      	movs	r5, #0
 8000340:	42a5      	cmp	r5, r4
 8000342:	d109      	bne.n	8000358 <__libc_init_array+0x24>
 8000344:	4e0b      	ldr	r6, [pc, #44]	; (8000374 <__libc_init_array+0x40>)
 8000346:	4c0c      	ldr	r4, [pc, #48]	; (8000378 <__libc_init_array+0x44>)
 8000348:	f000 f818 	bl	800037c <_init>
 800034c:	1ba4      	subs	r4, r4, r6
 800034e:	10a4      	asrs	r4, r4, #2
 8000350:	2500      	movs	r5, #0
 8000352:	42a5      	cmp	r5, r4
 8000354:	d105      	bne.n	8000362 <__libc_init_array+0x2e>
 8000356:	bd70      	pop	{r4, r5, r6, pc}
 8000358:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800035c:	4798      	blx	r3
 800035e:	3501      	adds	r5, #1
 8000360:	e7ee      	b.n	8000340 <__libc_init_array+0xc>
 8000362:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000366:	4798      	blx	r3
 8000368:	3501      	adds	r5, #1
 800036a:	e7f2      	b.n	8000352 <__libc_init_array+0x1e>
 800036c:	08000394 	.word	0x08000394
 8000370:	08000394 	.word	0x08000394
 8000374:	08000394 	.word	0x08000394
 8000378:	08000398 	.word	0x08000398

0800037c <_init>:
 800037c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037e:	bf00      	nop
 8000380:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000382:	bc08      	pop	{r3}
 8000384:	469e      	mov	lr, r3
 8000386:	4770      	bx	lr

08000388 <_fini>:
 8000388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038a:	bf00      	nop
 800038c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800038e:	bc08      	pop	{r3}
 8000390:	469e      	mov	lr, r3
 8000392:	4770      	bx	lr
